{
  "sql": "SELECT \n    DISTINCT lakepond_wbids_and_wbid_segments.OBJECTID, \n    waste_water_facilities.FacilityName, \n    waste_water_facilities.WWInventoryURL, \n    CASE WHEN lakepond_wbids_and_wbid_segments.WBID = waste_water_facilities.WWInventoryURL THEN 1 ELSE 0 END AS WBID_match, \n    CASE WHEN lakepond_wbids_and_wbid_segments.WBID = waste_water_facilities.FacilityID THEN 1 ELSE 0 END AS FacilityID_match, \n    CASE WHEN lakepond_wbids_and_wbid_segments.WBID = waste_water_facilities.WWInventoryURL AND lakepond_wbids_and_wbid_segments.WBID = waste_water_facilities.FacilityID THEN 1 ELSE 0 END AS Both_match, \n    waste_water_facilities.X, \n    waste_water_facilities.Y \nFROM \n    lakepond_wbids_and_wbid_segments \nJOIN \n    waste_water_facilities \nON \n    lakepond_wbids_and_wbid_segments.WBID = waste_water_facilities.WWInventoryURL \nORDER BY \n    lakepond_wbids_and_wbid_segments.OBJECTID;",
  "problem_description": "### Query intent:\nThe SQL statement aims to find relationships between two datasets: `lakepond_wbids_and_wbid_segments` and `waste_water_facilities`. It specifically seeks to identify instances where a `WBID` from the first dataset matches either the `WWInventoryURL`, `FacilityID`, or both fields in the second dataset.\n\n### Detailed description:\n- **Table `lakepond_wbids_and_wbid_segments`**:\n  - **`OBJECTID`**: A unique identifier for each record in this dataset.\n  - **`WBID`**: A unique identifier for a specific entity (likely related to waste water facilities).\n  \n- **Table `waste_water_facilities`**:\n  - **`FacilityName`**: The name of the waste water facility.\n  - **`WWInventoryURL`**: An URL related to inventory management of the facility.\n  - **`FacilityID`**: Another unique identifier for the facility, possibly used for internal referencing.\n\n- **Join condition**:\n  - `lakepond_wbids_and_wbid_segments.WBID = waste_water_facilities.WWInventoryURL`: This condition is used to join records from both datasets where the `WBID` from the first dataset matches the `WWInventoryURL` of the second dataset.\n\n- **Case statements**:\n  - **`WBID_match`**: Indicates whether the `WBID` from the joined table matches the `WWInventoryURL`.\n  - **`FacilityID_match`**: Indicates whether the `WBID` matches the `FacilityID`.\n  - **`Both_match`**: Returns 1 if both `WBID_match` and `FacilityID_match` are true, indicating a complete match across both identifiers.\n\n- **Order by clause**:\n  - `ORDER BY lakepond_wbids_and_wbid_segments.OBJECTID`: Orders the final result set based on the `OBJECTID` column from the first dataset, ensuring a consistent output order.\n\n### Business scenario:\nThis query is typically used in environmental monitoring and compliance systems. For instance, when managing databases of waste water treatment facilities, it's crucial to ensure that all data points are accurately linked to the correct facility. This could include inventory tracking, regulatory compliance checks, or operational audits.\n\n### User description:\nA user might need this information to verify the integrity of their database, ensuring that each `WBID` (which could represent a contract or project) is correctly associated with the right facility (`WWInventoryURL",
  "natural_language_query": "I'm trying to analyze our database to ensure that all entries for waste water facilities are correctly linked to the proper records. Specifically, I want to find out if there are any discrepancies where a 'WBID' in our list of 'lakepond_wbids_and_wbid_segments' does not match either the 'WWInventoryURL' or 'FacilityID' in the 'waste_water_facilities' database. \n\nTo do this, I'm planning to run a SQL query. First, I'll join these two tables using the 'WBID' field in 'lakepond_wbids_and_wbid_segments' and the 'WWInventoryURL' field in 'waste_water_facilities'. Then, I'll use case statements to check if the 'WBID' matches either the 'WWInventoryURL' or the 'FacilityID'. If both match, I'll flag those instances. Finally, I'll sort the results by the 'OBJECTID' in 'lakepond_wbids_and_wbid_segments' to maintain a logical order.\n\nI'm looking for any instances where there might be mismatches or discrepancies between our 'WBID' and the identifiers in the waste water facilities database. This will help us verify the accuracy of our data and ensure we're tracking the right information for each facility.",
  "results": 0,
  "sql skeleton": "select distinct _ as _ ,_ as _ ,_ (_ in _ ._ ) = _ (_ in _ ._ ) = _ (_ in _ ._ ) = _ (_ in _ ._ ) = _ as _ ,_ ._ as _ from _ ,_ where _ ._ = _ ._ and _ = (select _ from _ where _ = _ ) order by _ ._",
  "database": "Vermont Center for... - 96",
  "tables": {
    "lakepond_wbids_and_wbid_segments": [
      "lakepond_wbids_and_wbid_segments.OBJECTID",
      "lakepond_wbids_and_wbid_segments.Source",
      "lakepond_wbids_and_wbid_segments.WBID",
      "lakepond_wbids_and_wbid_segments.LAKEID",
      "lakepond_wbids_and_wbid_segments.EventType",
      "lakepond_wbids_and_wbid_segments.GISAcres"
    ],
    "waste_water_facilities": [
      "waste_water_facilities.X",
      "waste_water_facilities.Y",
      "waste_water_facilities.FacilityName",
      "waste_water_facilities.FacilityID",
      "waste_water_facilities.WWInventoryURL"
    ]
  }
}