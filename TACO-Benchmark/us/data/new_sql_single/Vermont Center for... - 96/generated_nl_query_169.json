{
  "sql": "SELECT waste_water_facilities.FacilityName, public_water_sources.SystemName FROM waste_water_facilities INNER JOIN public_water_sources ON waste_water_facilities.FacilityID = public_water_sources.FacilityID WHERE waste_water_facilities.FacilityID = '123' AND public_water_sources.Availability = 'Yes' ORDER BY waste_water_facilities.FacilityName ASC",
  "problem_description": "### Query intent:\nThe SQL statement aims to retrieve the FacilityName from the `waste_water_facilities` table and SystemName from the `public_water_sources` table. It performs an inner join based on matching FacilityIDs between the two tables. The query filters results by specifying a particular FacilityID ('123') and requiring the availability status in the `public_water_sources` table to be 'Yes'. Finally, it sorts the output alphabetically by the FacilityName.\n\n### Detailed description:\n- **Tables Involved**:\n  - `waste_water_facilities`: This table likely contains information about facilities related to waste water management. It includes at least two columns: `FacilityName` (the name of the facility) and `FacilityID` (a unique identifier for each facility).\n  - `public_water_sources`: This table is expected to contain details about public water sources, including a `SystemName` (name of the water source system) and `Availability` (a flag indicating whether the water source is available).\n\n- **Columns Selected**:\n  - `waste_water_facilities.FacilityName`: Retrieves the name of the waste water facility.\n  - `public_water_sources.SystemName`: Retrieves the name of the associated public water source system.\n\n- **Join Condition**:\n  - `INNER JOIN public_water_sources ON waste_water_facilities.FacilityID = public_water_sources.FacilityID`: Joins the `waste_water_facilities` table with the `public_water_sources` table based on matching `FacilityID`s. This ensures that only records where there is a corresponding entry in both tables are included in the result set.\n\n- **Filter Conditions**:\n  - `WHERE waste_water_facilities.FacilityID = '123'`: Limits the results to only those rows where the `FacilityID` in the `waste_water_facilities` table matches '123'.\n  - `AND public_water_sources.Availability = 'Yes'`: Further filters the results to include only those rows where the `Availability` column in the `public_water_sources` table has the value 'Yes'.\n\n- **Sorting**:\n  - `ORDER BY waste_water_facilities.FacilityName ASC`: Sorts the final result set alphabetically by the `FacilityName` in ascending order.\n\n### Business Scenario:\nThis SQL query can be used in scenarios where a company managing waste water facilities wants to gather information about their facilities and the public water systems they are connected to.",
  "natural_language_query": "I'm looking to pull some data for our waste water management project. Specifically, I need to fetch the names of the facilities from the 'waste_water_facilities' database and match them with the names of the corresponding public water systems from the 'public_water_sources' database. I want to ensure we're only considering the facilities with a specific ID, which is '123', and also make sure that the public water system is indeed operational, indicated by the status 'Yes' in the 'Availability' field. After filtering, I'd like to have the list sorted alphabetically by the names of the facilities.",
  "results": 0,
  "sql skeleton": "select _ ,_ from _ where _ = _ and _ = _ order by _",
  "database": "Vermont Center for... - 96",
  "tables": {
    "waste_water_facilities": [
      "waste_water_facilities.X",
      "waste_water_facilities.Y",
      "waste_water_facilities.FacilityName",
      "waste_water_facilities.FacilityID",
      "waste_water_facilities.WWInventoryURL"
    ],
    "public_water_sources": [
      "public_water_sources.X",
      "public_water_sources.Y",
      "public_water_sources.TINWSF_IS_NUMBER",
      "public_water_sources.WSID",
      "public_water_sources.SystemName",
      "public_water_sources.SystemType",
      "public_water_sources.SystemStatus",
      "public_water_sources.SystemPopulation",
      "public_water_sources.FacilityName",
      "public_water_sources.FacilityID",
      "public_water_sources.FacilityStatus",
      "public_water_sources.Availability",
      "public_water_sources.WaterType",
      "public_water_sources.ConstructedDate",
      "public_water_sources.PermittedYield",
      "public_water_sources.WellType",
      "public_water_sources.Diameter_in",
      "public_water_sources.WellDepth",
      "public_water_sources.CasingDepth",
      "public_water_sources.StaticWaterLevel"
    ]
  }
}