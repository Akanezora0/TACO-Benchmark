[
  {
    "idx": 43,
    "sql_query": "SELECT \n    outdoor_recreation_sites_inventory.X, \n    outdoor_recreation_sites_inventory.Y, \n    outdoor_recreation_sites_inventory.OBJECTID, \n    outdoor_recreation_sites_inventory.MAP, \n    outdoor_recreation_sites_inventory.MAP_NUMBER, \n    outdoor_recreation_sites_inventory.SITE_NAME, \n    outdoor_recreation_sites_inventory.PUBLIC_PRI, \n    outdoor_recreation_sites_inventory.BOATING_MA\nFROM \n    outdoor_recreation_sites_inventory \nJOIN \n    lakepond_wbids_and_wbid_segments \nON \n    outdoor_recreation_sites_inventory.OBJECTID = lakepond_wbids_and_wbid_segments.OBJECTID \nWHERE \n    lakepond_wbids_and_wbid_segments.Event_Type = 'Boating' \nAND \n    outdoor_recreation_sites_inventory.COUNTYCODE = '065' \nAND \n    lakepond_wbids_and_wbid_segments.GIS_Acres > 100;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT \n    outdoor_recreation_sites_inventory.X, \n    outdoor_recreation_sites_inventory.Y, \n    outdoor_recreation_sites_inventory.OBJECTID, \n    outdoor_recreation_sites_inventory.MAP, \n    outdoor_recreation_sites_inventory.MAP_NUMBER, \n    outdoor_recreation_sites_inventory.SITE_NAME, \n    outdoor_recreation_sites_inventory.PUBLIC_PRI, \n    outdoor_recreation_sites_inventory.BOATING_MA\nFROM \n    outdoor_recreation_sites_inventory \nJOIN \n    lakepond_wbids_and_wbid_segments \nON \n    outdoor_recreation_sites_inventory.OBJECTID = lakepond_wbids_and_wbid_segments.OBJECTID \nWHERE \n    lakepond_wbids_and_wbid_segments.Event_Type = 'Boating' \nAND \n    outdoor_recreation_sites_inventory.COUNTYCODE = '065' \nAND \n    lakepond_wbids_and_wbid_segments.GIS_Acres > 100;\n\n请按照以下格式输出：\n- **Query intent**: briefly explain the purpose of the SQL statement.\n- **Detailed description**: explain in detail the tables, columns, conditions, and other information involved in the query.\n- **Business scenario**: what business scenarios the queried tables, columns, conditions, etc. can be used to solve.\n- **User description**: actual problems or needs that users may encounter in the above business scenarios.\n"
  },
  {
    "idx": 43,
    "problem_description": "### Query intent:\nThe SQL statement is designed to retrieve specific attributes from two tables (`outdoor_recreation_sites_inventory` and `lakepond_wbids_and_wbid_segments`) based on certain conditions, aiming to find details related to outdoor recreation sites that meet specific criteria.\n\n### Detailed description:\n\n#### Tables Involved:\n1. **`outdoor_recreation_sites_inventory`**:\n   - This table likely contains detailed records about outdoor recreational sites such as coordinates (`X`, `Y`), an object identifier (`OBJECTID`), map information (`MAP`, `MAP_NUMBER`), site name (`SITE_NAME`), public priority (`PUBLIC_PRI`), and possibly other attributes related to boating (`BOATING_MA`).\n\n2. **`lakepond_wbids_and_wbid_segments`**:\n   - This table might include information about geographic features like lakes or ponds (`Event_Type`), their associated identifiers (`OBJECTID`), and possibly acreage (`GIS_Acres`).\n\n#### Columns Selected:\n- The query selects several key columns from `outdoor_recreation_sites_inventory`:\n  - `X`, `Y`: Coordinates of the outdoor recreational site.\n  - `OBJECTID`, `MAP`, `MAP_NUMBER`: Identifier and mapping details for the site.\n  - `SITE_NAME`: Name of the site.\n  - `PUBLIC_PRI`: Public priority level of the site.\n  - `BOATING_MA`: Information potentially related to boating activities at the site.\n\n#### Join Condition:\n- The query uses an INNER JOIN clause to match records from both tables where the `OBJECTID` column values are equal. This ensures that only records with matching identifiers across both tables are included in the result set.\n\n#### Where Conditions:\n- **`lakepond_wbids_and_wbid_segments.Event_Type = 'Boating'`**: Filters to only include records where the event type is specifically 'Boating'. This narrows down the results to sites that are relevant for boating activities.\n- **`outdoor_recreation_sites_inventory.COUNTYCODE = '065'`**: Further filters the results to only include sites located within a specific county code (065).\n- **`lakepond_wbids_and_wbid_segments.GIS_Acres > 100`**: Ensures that only sites associated with geographic areas larger than 100 acres are considered.\n\n### Business Scenario:\nThis query is typically used in a scenario where an organization needs to identify and analyze outdoor recreational sites that are suitable for bo",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **生成的文本为英文。**\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### Query intent:\nThe SQL statement is designed to retrieve specific attributes from two tables (`outdoor_recreation_sites_inventory` and `lakepond_wbids_and_wbid_segments`) based on certain conditions, aiming to find details related to outdoor recreation sites that meet specific criteria.\n\n### Detailed description:\n\n#### Tables Involved:\n1. **`outdoor_recreation_sites_inventory`**:\n   - This table likely contains detailed records about outdoor recreational sites such as coordinates (`X`, `Y`), an object identifier (`OBJECTID`), map information (`MAP`, `MAP_NUMBER`), site name (`SITE_NAME`), public priority (`PUBLIC_PRI`), and possibly other attributes related to boating (`BOATING_MA`).\n\n2. **`lakepond_wbids_and_wbid_segments`**:\n   - This table might include information about geographic features like lakes or ponds (`Event_Type`), their associated identifiers (`OBJECTID`), and possibly acreage (`GIS_Acres`).\n\n#### Columns Selected:\n- The query selects several key columns from `outdoor_recreation_sites_inventory`:\n  - `X`, `Y`: Coordinates of the outdoor recreational site.\n  - `OBJECTID`, `MAP`, `MAP_NUMBER`: Identifier and mapping details for the site.\n  - `SITE_NAME`: Name of the site.\n  - `PUBLIC_PRI`: Public priority level of the site.\n  - `BOATING_MA`: Information potentially related to boating activities at the site.\n\n#### Join Condition:\n- The query uses an INNER JOIN clause to match records from both tables where the `OBJECTID` column values are equal. This ensures that only records with matching identifiers across both tables are included in the result set.\n\n#### Where Conditions:\n- **`lakepond_wbids_and_wbid_segments.Event_Type = 'Boating'`**: Filters to only include records where the event type is specifically 'Boating'. This narrows down the results to sites that are relevant for boating activities.\n- **`outdoor_recreation_sites_inventory.COUNTYCODE = '065'`**: Further filters the results to only include sites located within a specific county code (065).\n- **`lakepond_wbids_and_wbid_segments.GIS_Acres > 100`**: Ensures that only sites associated with geographic areas larger than 100 acres are considered.\n\n### Business Scenario:\nThis query is typically used in a scenario where an organization needs to identify and analyze outdoor recreational sites that are suitable for bo\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]