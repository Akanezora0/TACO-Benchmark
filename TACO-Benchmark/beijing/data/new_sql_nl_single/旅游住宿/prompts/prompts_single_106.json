[
  {
    "idx": 106,
    "sql_query": "SELECT \"shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777.本市市管游览参观点门票价格\", \"yanqingquyanqingqulvyoujingquxinxi3381.旅游景区\" FROM \"shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777\" - \"yanqingquyanqingqulvyoujingquxinxi3381\" WHERE \"shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777.本市市管游览参观点门票价格\" = 100;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT \"shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777.本市市管游览参观点门票价格\", \"yanqingquyanqingqulvyoujingquxinxi3381.旅游景区\" FROM \"shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777\" - \"yanqingquyanqingqulvyoujingquxinxi3381\" WHERE \"shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777.本市市管游览参观点门票价格\" = 100;\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 106,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从两个表（或视图）中查询满足特定条件的记录，具体是查找“本市市管游览参观点门票价格”为 100 元的景点信息，并与“延庆区旅游景区”信息进行对比或关联。\n\n---\n\n### **详细描述**  \n1. **涉及的表**：  \n   - `shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777`（可能是一个包含本市景点门票价格信息的表）  \n   - `yanqingquyanqingqulvyoujingquxinxi3381`（可能是一个包含延庆区旅游景区信息的表）  \n\n2. **查询的列**：  \n   - `shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777.本市市管游览参观点门票价格`（本市景点的门票价格）  \n   - `yanqingquyanqingqulvyoujingquxinxi3381.旅游景区`（延庆区的旅游景区名称）  \n\n3. **查询条件**：  \n   - 仅选择“本市市管游览参观点门票价格”等于 100 元的记录。  \n\n4. **运算操作**：  \n   - 使用了 `表1 - 表2` 的语法，可能是某种集合差集操作（如排除延庆区的景点），但具体语义需结合数据库实现（部分数据库支持 `EXCEPT` 或 `MINUS` 操作）。  \n\n---\n\n### **业务场景**  \n1. **门票价格管理**：  \n   - 查询本市门票价格为 100 元的景点，可能与定价政策、价格调整或优惠活动相关。  \n2. **区域景点对比**：  \n   - 对比本市景点与延庆区景点的信息，例如分析价格差异或游客分布。  \n3. **数据清洗或筛选**：  \n   - 排除延庆区的景点，仅关注本市其他区域的景点信息。  \n\n---\n\n### **用户描述**  \n1. **用户需求**：  \n   - 旅游管理部门可能需要统计本市门票价格为 100 元的景点，用于制定统一票价政策或分析游客消费情况。  \n   - 旅行社或游客可能想查询“非延庆区”且门票价格为 100 元的景点，以便规划性价比高的旅游路线。  \n2. **实际问题**：  \n   - 用户需要快速筛选出特定价格的景点，同时排除某些区域（如延庆区）的干扰数据。  \n   - 可能涉及跨区域景点数据的整合或对比，例如评估不同行政区的门票定价策略。  \n\n--- \n\n### **补充说明**  \n- 如果 `表1 - 表2` 是集合差集操作，则查询结果可能是“本市门票 100 元的景点中，不属于延庆区的景点”。  \n- 表名和列名较长且包含数字后缀，可能是从数据仓库或数据湖中提取的原始表，表明数据来源复杂（如多系统集成或爬取数据）。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从两个表（或视图）中查询满足特定条件的记录，具体是查找“本市市管游览参观点门票价格”为 100 元的景点信息，并与“延庆区旅游景区”信息进行对比或关联。\n\n---\n\n### **详细描述**  \n1. **涉及的表**：  \n   - `shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777`（可能是一个包含本市景点门票价格信息的表）  \n   - `yanqingquyanqingqulvyoujingquxinxi3381`（可能是一个包含延庆区旅游景区信息的表）  \n\n2. **查询的列**：  \n   - `shifazhangaigeweishiguanyoulancanguandianxianxingmenpiaojiagejiyuanzhongyuanjiagexinxi1777.本市市管游览参观点门票价格`（本市景点的门票价格）  \n   - `yanqingquyanqingqulvyoujingquxinxi3381.旅游景区`（延庆区的旅游景区名称）  \n\n3. **查询条件**：  \n   - 仅选择“本市市管游览参观点门票价格”等于 100 元的记录。  \n\n4. **运算操作**：  \n   - 使用了 `表1 - 表2` 的语法，可能是某种集合差集操作（如排除延庆区的景点），但具体语义需结合数据库实现（部分数据库支持 `EXCEPT` 或 `MINUS` 操作）。  \n\n---\n\n### **业务场景**  \n1. **门票价格管理**：  \n   - 查询本市门票价格为 100 元的景点，可能与定价政策、价格调整或优惠活动相关。  \n2. **区域景点对比**：  \n   - 对比本市景点与延庆区景点的信息，例如分析价格差异或游客分布。  \n3. **数据清洗或筛选**：  \n   - 排除延庆区的景点，仅关注本市其他区域的景点信息。  \n\n---\n\n### **用户描述**  \n1. **用户需求**：  \n   - 旅游管理部门可能需要统计本市门票价格为 100 元的景点，用于制定统一票价政策或分析游客消费情况。  \n   - 旅行社或游客可能想查询“非延庆区”且门票价格为 100 元的景点，以便规划性价比高的旅游路线。  \n2. **实际问题**：  \n   - 用户需要快速筛选出特定价格的景点，同时排除某些区域（如延庆区）的干扰数据。  \n   - 可能涉及跨区域景点数据的整合或对比，例如评估不同行政区的门票定价策略。  \n\n--- \n\n### **补充说明**  \n- 如果 `表1 - 表2` 是集合差集操作，则查询结果可能是“本市门票 100 元的景点中，不属于延庆区的景点”。  \n- 表名和列名较长且包含数字后缀，可能是从数据仓库或数据湖中提取的原始表，表明数据来源复杂（如多系统集成或爬取数据）。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]