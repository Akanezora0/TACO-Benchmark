{
  "sql": "SELECT column1, column2 FROM table1 - table2 WHERE condition = value ;",
  "problem_description": "# SQL 语句分析\n\n## 查询意图\n这个SQL语句的目的是从`table1`中减去`table2`的内容（即获取在`table1`中但不在`table2`中的记录），然后筛选出满足`condition = value`条件的记录，最后返回这些记录的`column1`和`column2`列。\n\n## 详细描述\n- **涉及的表**：\n  - `table1`：主表，从中获取基础数据\n  - `table2`：用于从`table1`中排除的记录集\n\n- **操作**：\n  - `table1 - table2`：这是一个集合差操作，返回在`table1`中但不在`table2`中的记录\n  - `WHERE condition = value`：对差集结果进行过滤，只保留满足条件的记录\n\n- **返回列**：\n  - `column1`：从结果集中选择的第一列\n  - `column2`：从结果集中选择的第二列\n\n## 业务场景\n这种查询在以下业务场景中很有用：\n1. **客户管理**：找出已注册但尚未购买的客户\n2. **库存管理**：识别已入库但未出库的商品\n3. **任务分配**：查找已分配但未开始的任务\n4. **会员服务**：确定有资格但尚未使用某项服务的会员\n\n## 用户描述\n在上述业务场景中，用户可能遇到的实际问题或需求包括：\n- **营销团队**：需要针对已注册但未购买的用户设计专门的促销活动\n- **仓库管理员**：需要检查哪些商品长期停留在库存中未被销售\n- **项目经理**：需要跟进哪些任务被分配但团队成员尚未开始处理\n- **客户服务**：希望识别出有资格享受优惠但尚未使用的会员，以便主动推送提醒\n\n注意：这个SQL语法`table1 - table2`在某些数据库系统中可能不被直接支持（这是标准SQL中的EXCEPT操作），实际实现可能需要使用`NOT IN`或`NOT EXISTS`子查询。",
  "natural_language_query": "市民反映，我在管理会员系统时遇到一个问题，想找出一批特定的会员名单。具体来说，我们系统里登记的所有会员中，有一部分是已经注册但从来没使用过我们新推出的健身课程的会员。这些会员资料都在系统里，但是健身课程预约记录里找不到他们的信息。我想知道这些符合条件的会员的姓名和联系方式，这样我们可以给他们发送专属优惠提醒。对了，只需要查询那些会员等级在\"黄金\"级别以上的。能不能帮忙看看怎么获取这份名单？主要是想针对这些优质但未开发价值的会员做精准营销。",
  "results": 0,
  "sql skeleton": "SELECT _ , _ FROM _ -_ -_ WHERE _ = _ ;",
  "database": "安全生活",
  "tables": {}
}