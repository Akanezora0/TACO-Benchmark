[
  {
    "idx": 78,
    "sql_query": "select column1, column2, column3 from table1 where condition1 = 'value1' and condition2 = 'value2';",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect column1, column2, column3 from table1 where condition1 = 'value1' and condition2 = 'value2';\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 78,
    "problem_description": "### 查询意图：\n该 SQL 语句的目的是从 `table1` 表中筛选出满足特定条件的数据，并返回 `column1`、`column2` 和 `column3` 这三列的值。\n\n### 详细描述：\n1. **表（table1）**：这是查询的主要数据来源，`table1` 可能存储了某种业务数据。\n2. **列（column1, column2, column3）**：查询结果将返回这三列的值，这些列可能代表了业务数据中的关键信息。\n3. **条件（condition1 = 'value1' and condition2 = 'value2'）**：\n   - `condition1 = 'value1'`：筛选出 `condition1` 列的值等于 `'value1'` 的记录。\n   - `condition2 = 'value2'`：进一步筛选出 `condition2` 列的值等于 `'value2'` 的记录。\n   - 这两个条件通过 `AND` 连接，表示需要同时满足这两个条件的记录才会被返回。\n\n### 业务场景：\n假设 `table1` 是一个存储客户订单信息的表，可能的业务场景包括：\n- **列的含义**：\n  - `column1`：订单编号\n  - `column2`：客户名称\n  - `column3`：订单金额\n- **条件的含义**：\n  - `condition1 = 'value1'`：订单状态为“已完成”（假设 `'value1'` 代表“已完成”）。\n  - `condition2 = 'value2'`：订单日期为某一天（假设 `'value2'` 代表“2023-10-01”）。\n- **业务场景**：查询 2023 年 10 月 1 日所有已完成的订单的订单编号、客户名称和订单金额。\n\n### 用户描述：\n用户可能需要生成一份报表，统计某一天（如 2023 年 10 月 1 日）所有已完成的订单情况，以便进行财务对账或客户服务跟进。用户希望通过查询获取这些订单的基本信息（如订单编号、客户名称和订单金额），以便进一步分析或处理。例如：\n- 财务部门需要核对当天的已完成订单的总金额是否与银行流水一致。\n- 客服部门可能需要联系这些订单的客户进行满意度调查。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### 查询意图：\n该 SQL 语句的目的是从 `table1` 表中筛选出满足特定条件的数据，并返回 `column1`、`column2` 和 `column3` 这三列的值。\n\n### 详细描述：\n1. **表（table1）**：这是查询的主要数据来源，`table1` 可能存储了某种业务数据。\n2. **列（column1, column2, column3）**：查询结果将返回这三列的值，这些列可能代表了业务数据中的关键信息。\n3. **条件（condition1 = 'value1' and condition2 = 'value2'）**：\n   - `condition1 = 'value1'`：筛选出 `condition1` 列的值等于 `'value1'` 的记录。\n   - `condition2 = 'value2'`：进一步筛选出 `condition2` 列的值等于 `'value2'` 的记录。\n   - 这两个条件通过 `AND` 连接，表示需要同时满足这两个条件的记录才会被返回。\n\n### 业务场景：\n假设 `table1` 是一个存储客户订单信息的表，可能的业务场景包括：\n- **列的含义**：\n  - `column1`：订单编号\n  - `column2`：客户名称\n  - `column3`：订单金额\n- **条件的含义**：\n  - `condition1 = 'value1'`：订单状态为“已完成”（假设 `'value1'` 代表“已完成”）。\n  - `condition2 = 'value2'`：订单日期为某一天（假设 `'value2'` 代表“2023-10-01”）。\n- **业务场景**：查询 2023 年 10 月 1 日所有已完成的订单的订单编号、客户名称和订单金额。\n\n### 用户描述：\n用户可能需要生成一份报表，统计某一天（如 2023 年 10 月 1 日）所有已完成的订单情况，以便进行财务对账或客户服务跟进。用户希望通过查询获取这些订单的基本信息（如订单编号、客户名称和订单金额），以便进一步分析或处理。例如：\n- 财务部门需要核对当天的已完成订单的总金额是否与银行流水一致。\n- 客服部门可能需要联系这些订单的客户进行满意度调查。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]