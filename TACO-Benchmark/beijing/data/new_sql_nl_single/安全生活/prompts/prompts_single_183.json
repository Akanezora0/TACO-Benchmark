[
  {
    "idx": 183,
    "sql_query": "select count(*), sum(sales), avg(price) from sales_data where date >= '2023-01-01' and date <= '2023-12-31'",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect count(*), sum(sales), avg(price) from sales_data where date >= '2023-01-01' and date <= '2023-12-31'\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 183,
    "problem_description": "### **查询意图**：  \n该 SQL 语句的目的是统计 `sales_data` 表中 2023 年全年的销售数据，包括记录总数、销售总额和平均价格。  \n\n### **详细描述**：  \n1. **涉及的表**：  \n   - `sales_data`：存储销售数据的表，可能包含销售日期、销售额、价格等信息。  \n\n2. **涉及的列**：  \n   - `sales`：表示每笔销售的金额（或数量）。  \n   - `price`：表示每笔销售的单价（或商品价格）。  \n   - `date`：表示销售发生的日期。  \n\n3. **聚合函数**：  \n   - `count(*)`：计算符合条件的记录总数（即 2023 年的销售笔数）。  \n   - `sum(sales)`：计算 2023 年所有销售的总金额（或总销量）。  \n   - `avg(price)`：计算 2023 年销售的平均价格。  \n\n4. **条件（WHERE 子句）**：  \n   - `date >= '2023-01-01' and date <= '2023-12-31'`：筛选 2023 年 1 月 1 日至 2023 年 12 月 31 日之间的销售记录。  \n\n### **业务场景**：  \n该查询可用于以下业务分析场景：  \n1. **年度销售报告**：统计 2023 年的销售笔数、总销售额和平均价格，帮助管理层了解全年业绩。  \n2. **趋势分析**：结合其他年份的数据，分析销售增长或下降趋势。  \n3. **定价策略评估**：通过平均价格的变化，评估定价策略是否合理。  \n4. **库存管理**：结合销售笔数和销售额，优化库存和采购计划。  \n\n### **用户描述**：  \n在该业务场景下，用户（如销售经理、财务分析师或企业管理者）可能遇到以下问题或需求：  \n1. **年度业绩评估**：  \n   - “2023 年我们一共完成了多少笔销售？总销售额是多少？”  \n   - “与去年相比，我们的销售表现如何？”  \n2. **定价优化**：  \n   - “2023 年的平均销售价格是多少？是否应该调整定价策略？”  \n3. **预算规划**：  \n   - “基于 2023 年的销售数据，2024 年的销售目标应该如何设定？”  \n4. **业务决策支持**：  \n   - “哪些月份销售表现最好？是否需要调整促销策略？”  \n\n通过该 SQL 查询，用户可以快速获取关键销售指标，辅助决策制定和业务优化。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**：  \n该 SQL 语句的目的是统计 `sales_data` 表中 2023 年全年的销售数据，包括记录总数、销售总额和平均价格。  \n\n### **详细描述**：  \n1. **涉及的表**：  \n   - `sales_data`：存储销售数据的表，可能包含销售日期、销售额、价格等信息。  \n\n2. **涉及的列**：  \n   - `sales`：表示每笔销售的金额（或数量）。  \n   - `price`：表示每笔销售的单价（或商品价格）。  \n   - `date`：表示销售发生的日期。  \n\n3. **聚合函数**：  \n   - `count(*)`：计算符合条件的记录总数（即 2023 年的销售笔数）。  \n   - `sum(sales)`：计算 2023 年所有销售的总金额（或总销量）。  \n   - `avg(price)`：计算 2023 年销售的平均价格。  \n\n4. **条件（WHERE 子句）**：  \n   - `date >= '2023-01-01' and date <= '2023-12-31'`：筛选 2023 年 1 月 1 日至 2023 年 12 月 31 日之间的销售记录。  \n\n### **业务场景**：  \n该查询可用于以下业务分析场景：  \n1. **年度销售报告**：统计 2023 年的销售笔数、总销售额和平均价格，帮助管理层了解全年业绩。  \n2. **趋势分析**：结合其他年份的数据，分析销售增长或下降趋势。  \n3. **定价策略评估**：通过平均价格的变化，评估定价策略是否合理。  \n4. **库存管理**：结合销售笔数和销售额，优化库存和采购计划。  \n\n### **用户描述**：  \n在该业务场景下，用户（如销售经理、财务分析师或企业管理者）可能遇到以下问题或需求：  \n1. **年度业绩评估**：  \n   - “2023 年我们一共完成了多少笔销售？总销售额是多少？”  \n   - “与去年相比，我们的销售表现如何？”  \n2. **定价优化**：  \n   - “2023 年的平均销售价格是多少？是否应该调整定价策略？”  \n3. **预算规划**：  \n   - “基于 2023 年的销售数据，2024 年的销售目标应该如何设定？”  \n4. **业务决策支持**：  \n   - “哪些月份销售表现最好？是否需要调整促销策略？”  \n\n通过该 SQL 查询，用户可以快速获取关键销售指标，辅助决策制定和业务优化。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]