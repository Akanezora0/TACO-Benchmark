[
  {
    "idx": 145,
    "sql_query": "select T1.col1, T1.col2 from Table1 as T1 left join Table2 as T2 on T1.id = T2.id where T1.col1 in (select T3.col1 from Table3 as T3 where T3.col2 > 10)",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect T1.col1, T1.col2 from Table1 as T1 left join Table2 as T2 on T1.id = T2.id where T1.col1 in (select T3.col1 from Table3 as T3 where T3.col2 > 10)\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 145,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从 `Table1` 中查询符合条件的记录，并与 `Table2` 进行左连接，同时筛选出 `Table1.col1` 的值在 `Table3` 中满足特定条件的记录。  \n\n### **详细描述**  \n1. **涉及的表**：  \n   - `Table1`（别名 `T1`）：主表，包含 `col1`、`col2` 和 `id` 列。  \n   - `Table2`（别名 `T2`）：与 `Table1` 进行左连接的表，包含 `id` 列（与 `T1.id` 关联）。  \n   - `Table3`（别名 `T3`）：用于子查询的表，包含 `col1` 和 `col2` 列。  \n\n2. **查询逻辑**：  \n   - **左连接**：`Table1` 左连接 `Table2`，关联条件是 `T1.id = T2.id`，即保留 `Table1` 的所有记录，即使 `Table2` 中没有匹配的记录。  \n   - **子查询条件**：`T1.col1` 必须在子查询 `(select T3.col1 from Table3 as T3 where T3.col2 > 10)` 的结果集中，即 `Table3.col2 > 10` 的记录对应的 `col1` 值。  \n   - **最终输出**：返回 `Table1` 中符合条件的 `col1` 和 `col2` 列。  \n\n3. **关键条件**：  \n   - `T3.col2 > 10`：子查询筛选 `Table3` 中 `col2` 值大于 10 的记录。  \n   - `T1.col1 IN (...)`：主查询筛选 `Table1` 中 `col1` 值在子查询结果中的记录。  \n\n### **业务场景**  \n该查询可能用于以下业务场景：  \n1. **数据关联分析**：例如，`Table1` 是订单表，`Table2` 是客户表，`Table3` 是商品表。查询的目的是找出购买了某些高价值商品（`Table3.col2 > 10`，如价格 > 10 的商品）的订单信息（`Table1.col1, Table1.col2`），同时关联客户信息（`Table2`）。  \n2. **条件筛选**：例如，`Table1` 是员工表，`Table3` 是绩效表，查询绩效分数（`col2`）超过 10 的员工（`col1`）的基本信息（`col1, col2`）。  \n\n### **用户描述**  \n1. **用户需求**：  \n   - 用户可能需要找出购买了特定高价值商品的订单，以便进行促销或客户分析。  \n   - 或者，用户希望筛选出绩效优秀的员工，以便进行奖励或晋升评估。  \n2. **实际问题**：  \n   - 如果直接查询 `Table1`，无法知道哪些记录符合业务上的附加条件（如高价值商品或高绩效）。  \n   - 通过子查询和连接，可以精确筛选出符合业务逻辑的数据，避免手动筛选或多次查询。  \n\n### **总结**  \n该 SQL 语句通过左连接和子查询，从 `Table1` 中筛选出符合 `Table3` 条件的数据，并结合 `Table2` 的信息，适用于需要多表关联并按特定业务规则筛选数据的场景。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从 `Table1` 中查询符合条件的记录，并与 `Table2` 进行左连接，同时筛选出 `Table1.col1` 的值在 `Table3` 中满足特定条件的记录。  \n\n### **详细描述**  \n1. **涉及的表**：  \n   - `Table1`（别名 `T1`）：主表，包含 `col1`、`col2` 和 `id` 列。  \n   - `Table2`（别名 `T2`）：与 `Table1` 进行左连接的表，包含 `id` 列（与 `T1.id` 关联）。  \n   - `Table3`（别名 `T3`）：用于子查询的表，包含 `col1` 和 `col2` 列。  \n\n2. **查询逻辑**：  \n   - **左连接**：`Table1` 左连接 `Table2`，关联条件是 `T1.id = T2.id`，即保留 `Table1` 的所有记录，即使 `Table2` 中没有匹配的记录。  \n   - **子查询条件**：`T1.col1` 必须在子查询 `(select T3.col1 from Table3 as T3 where T3.col2 > 10)` 的结果集中，即 `Table3.col2 > 10` 的记录对应的 `col1` 值。  \n   - **最终输出**：返回 `Table1` 中符合条件的 `col1` 和 `col2` 列。  \n\n3. **关键条件**：  \n   - `T3.col2 > 10`：子查询筛选 `Table3` 中 `col2` 值大于 10 的记录。  \n   - `T1.col1 IN (...)`：主查询筛选 `Table1` 中 `col1` 值在子查询结果中的记录。  \n\n### **业务场景**  \n该查询可能用于以下业务场景：  \n1. **数据关联分析**：例如，`Table1` 是订单表，`Table2` 是客户表，`Table3` 是商品表。查询的目的是找出购买了某些高价值商品（`Table3.col2 > 10`，如价格 > 10 的商品）的订单信息（`Table1.col1, Table1.col2`），同时关联客户信息（`Table2`）。  \n2. **条件筛选**：例如，`Table1` 是员工表，`Table3` 是绩效表，查询绩效分数（`col2`）超过 10 的员工（`col1`）的基本信息（`col1, col2`）。  \n\n### **用户描述**  \n1. **用户需求**：  \n   - 用户可能需要找出购买了特定高价值商品的订单，以便进行促销或客户分析。  \n   - 或者，用户希望筛选出绩效优秀的员工，以便进行奖励或晋升评估。  \n2. **实际问题**：  \n   - 如果直接查询 `Table1`，无法知道哪些记录符合业务上的附加条件（如高价值商品或高绩效）。  \n   - 通过子查询和连接，可以精确筛选出符合业务逻辑的数据，避免手动筛选或多次查询。  \n\n### **总结**  \n该 SQL 语句通过左连接和子查询，从 `Table1` 中筛选出符合 `Table3` 条件的数据，并结合 `Table2` 的信息，适用于需要多表关联并按特定业务规则筛选数据的场景。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]