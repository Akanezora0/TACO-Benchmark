[
  {
    "idx": 142,
    "sql_query": "select table1.\"column1\" from table1 where table1.\"column1\" = 'value1' or table1.\"column1\" like '%value2%'\n```",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect table1.\"column1\" from table1 where table1.\"column1\" = 'value1' or table1.\"column1\" like '%value2%'\n```\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 142,
    "problem_description": "### 输出格式：\n\n- **查询意图**：  \n  该 SQL 语句的目的是从 `table1` 表中查询满足特定条件的 `column1` 列的值。具体条件是 `column1` 的值等于 `'value1'` 或者包含 `'value2'` 子字符串。\n\n- **详细描述**：  \n  - **涉及的表**：`table1`  \n  - **涉及的列**：`column1`  \n  - **查询条件**：  \n    - `table1.\"column1\" = 'value1'`：精确匹配 `column1` 的值为 `'value1'` 的记录。  \n    - `table1.\"column1\" like '%value2%'`：模糊匹配 `column1` 的值中包含 `'value2'` 子字符串的记录（`%` 是通配符，表示任意字符或任意长度）。  \n    - 两个条件通过 `OR` 连接，表示满足其中任意一个条件的记录都会被选中。  \n\n- **业务场景**：  \n  这种查询可能用于以下业务场景：  \n  1. **数据筛选**：用户需要从 `table1` 中筛选出特定值或包含特定关键词的记录。例如：  \n     - `'value1'` 可能是某个固定的分类代码或状态标识（如 `status = 'active'`）。  \n     - `'value2'` 可能是用户输入的关键词，用于模糊搜索（如商品名称中包含“促销”字样的商品）。  \n  2. **数据分析**：分析 `column1` 中某些特定值或模式的分布情况。  \n\n- **用户描述**：  \n  用户在实际业务中可能遇到以下问题或需求：  \n  - 需要快速查找 `table1` 中 `column1` 值为 `'value1'` 的所有记录（例如查找所有“已审核”的订单）。  \n  - 需要模糊搜索 `column1` 中包含 `'value2'` 的记录（例如搜索客户姓名中包含“张”的所有客户）。  \n  - 需要同时满足两种条件之一的结果（例如查找“高优先级”或描述中包含“紧急”的任务）。  \n\n### 补充说明：\n- 如果 `column1` 是字符串类型，`LIKE` 操作是合理的；如果是其他类型（如数字），`LIKE` 可能不适用。  \n- `OR` 条件可能导致查询性能下降（尤其是 `LIKE '%value2%'` 这种模糊匹配），如果数据量大，可能需要优化或添加索引。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### 输出格式：\n\n- **查询意图**：  \n  该 SQL 语句的目的是从 `table1` 表中查询满足特定条件的 `column1` 列的值。具体条件是 `column1` 的值等于 `'value1'` 或者包含 `'value2'` 子字符串。\n\n- **详细描述**：  \n  - **涉及的表**：`table1`  \n  - **涉及的列**：`column1`  \n  - **查询条件**：  \n    - `table1.\"column1\" = 'value1'`：精确匹配 `column1` 的值为 `'value1'` 的记录。  \n    - `table1.\"column1\" like '%value2%'`：模糊匹配 `column1` 的值中包含 `'value2'` 子字符串的记录（`%` 是通配符，表示任意字符或任意长度）。  \n    - 两个条件通过 `OR` 连接，表示满足其中任意一个条件的记录都会被选中。  \n\n- **业务场景**：  \n  这种查询可能用于以下业务场景：  \n  1. **数据筛选**：用户需要从 `table1` 中筛选出特定值或包含特定关键词的记录。例如：  \n     - `'value1'` 可能是某个固定的分类代码或状态标识（如 `status = 'active'`）。  \n     - `'value2'` 可能是用户输入的关键词，用于模糊搜索（如商品名称中包含“促销”字样的商品）。  \n  2. **数据分析**：分析 `column1` 中某些特定值或模式的分布情况。  \n\n- **用户描述**：  \n  用户在实际业务中可能遇到以下问题或需求：  \n  - 需要快速查找 `table1` 中 `column1` 值为 `'value1'` 的所有记录（例如查找所有“已审核”的订单）。  \n  - 需要模糊搜索 `column1` 中包含 `'value2'` 的记录（例如搜索客户姓名中包含“张”的所有客户）。  \n  - 需要同时满足两种条件之一的结果（例如查找“高优先级”或描述中包含“紧急”的任务）。  \n\n### 补充说明：\n- 如果 `column1` 是字符串类型，`LIKE` 操作是合理的；如果是其他类型（如数字），`LIKE` 可能不适用。  \n- `OR` 条件可能导致查询性能下降（尤其是 `LIKE '%value2%'` 这种模糊匹配），如果数据量大，可能需要优化或添加索引。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]