[
  {
    "idx": 130,
    "sql_query": "select column1, column2, column3, column4, column5 from table1 where condition = 'value'",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect column1, column2, column3, column4, column5 from table1 where condition = 'value'\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 130,
    "problem_description": "- **查询意图**：该 SQL 语句的目的是从 `table1` 表中筛选出满足特定条件（`condition = 'value'`）的记录，并返回这些记录的 `column1`、`column2`、`column3`、`column4` 和 `column5` 列的值。\n\n- **详细描述**：\n  - **涉及的表**：`table1` 是该查询的主要操作表。\n  - **涉及的列**：\n    - 查询结果中会包含 `column1`、`column2`、`column3`、`column4` 和 `column5` 这五列的数据。\n    - 条件部分使用了 `condition` 列，筛选出该列的值等于 `'value'` 的记录。\n  - **条件**：`condition = 'value'` 是一个筛选条件，表示只选择 `condition` 列的值等于 `'value'` 的行。\n\n- **业务场景**：\n  - 假设 `table1` 是一个订单表，`column1` 到 `column5` 可能分别代表订单编号、客户名称、订单日期、订单金额和订单状态，而 `condition` 列可能代表订单状态。\n  - 该查询可以用来获取所有状态为 `'value'`（例如 `'已完成'` 或 `'待支付'`）的订单的详细信息。\n  - 另一个可能的场景是 `table1` 是一个用户表，`condition` 列代表用户类型（如 `'VIP'` 或 `'普通用户'`），查询可以用于筛选特定类型的用户信息。\n\n- **用户描述**：\n  - 在订单表的场景下，用户可能需要查看所有“已完成”的订单，以便进行后续的财务对账或客户满意度调查。\n  - 在用户表的场景下，用户可能需要筛选出所有“VIP”用户，以便发送专属优惠或进行个性化营销。\n  - 用户的需求是通过简单的条件筛选快速获取特定类型的数据，以便进行进一步的分析或操作。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n- **查询意图**：该 SQL 语句的目的是从 `table1` 表中筛选出满足特定条件（`condition = 'value'`）的记录，并返回这些记录的 `column1`、`column2`、`column3`、`column4` 和 `column5` 列的值。\n\n- **详细描述**：\n  - **涉及的表**：`table1` 是该查询的主要操作表。\n  - **涉及的列**：\n    - 查询结果中会包含 `column1`、`column2`、`column3`、`column4` 和 `column5` 这五列的数据。\n    - 条件部分使用了 `condition` 列，筛选出该列的值等于 `'value'` 的记录。\n  - **条件**：`condition = 'value'` 是一个筛选条件，表示只选择 `condition` 列的值等于 `'value'` 的行。\n\n- **业务场景**：\n  - 假设 `table1` 是一个订单表，`column1` 到 `column5` 可能分别代表订单编号、客户名称、订单日期、订单金额和订单状态，而 `condition` 列可能代表订单状态。\n  - 该查询可以用来获取所有状态为 `'value'`（例如 `'已完成'` 或 `'待支付'`）的订单的详细信息。\n  - 另一个可能的场景是 `table1` 是一个用户表，`condition` 列代表用户类型（如 `'VIP'` 或 `'普通用户'`），查询可以用于筛选特定类型的用户信息。\n\n- **用户描述**：\n  - 在订单表的场景下，用户可能需要查看所有“已完成”的订单，以便进行后续的财务对账或客户满意度调查。\n  - 在用户表的场景下，用户可能需要筛选出所有“VIP”用户，以便发送专属优惠或进行个性化营销。\n  - 用户的需求是通过简单的条件筛选快速获取特定类型的数据，以便进行进一步的分析或操作。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]