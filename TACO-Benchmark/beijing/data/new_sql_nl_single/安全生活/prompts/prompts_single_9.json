[
  {
    "idx": 9,
    "sql_query": "select t1.c1 from table1 as t1 where t1.c2 in (select t2.c3 from table2 as t2 where t2.c4 = 'value')\n```",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect t1.c1 from table1 as t1 where t1.c2 in (select t2.c3 from table2 as t2 where t2.c4 = 'value')\n```\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 9,
    "problem_description": "### 输出格式：\n\n- **查询意图**：  \n  该 SQL 语句的目的是从 `table1` 中筛选出满足条件的记录，具体是筛选出 `table1` 中 `c2` 列的值存在于 `table2` 中 `c3` 列的子查询结果中的记录，并返回这些记录的 `c1` 列的值。\n\n- **详细描述**：  \n  - **涉及的表**：\n    - `table1`（别名为 `t1`）：主查询的表，从中筛选数据。\n    - `table2`（别名为 `t2`）：子查询的表，用于生成筛选条件。\n  - **涉及的列**：\n    - `t1.c1`：主查询的结果列，即需要返回的数据。\n    - `t1.c2`：主查询的条件列，用于与子查询的结果进行比较。\n    - `t2.c3`：子查询的结果列，其值将用于筛选 `t1.c2`。\n    - `t2.c4`：子查询的条件列，用于筛选 `table2` 中的数据。\n  - **条件**：\n    - 子查询 `(select t2.c3 from table2 as t2 where t2.c4 = 'value')` 返回 `table2` 中 `c4` 列等于 `'value'` 的所有记录的 `c3` 列的值。\n    - 主查询的条件 `t1.c2 in (...)` 表示 `t1.c2` 的值必须存在于子查询返回的结果集中。\n\n- **业务场景**：  \n  这种查询通常用于解决以下业务场景：\n  - **关联数据筛选**：例如，`table1` 是订单表，`table2` 是客户表，查询需要找出所有属于特定客户（`c4 = 'value'`）的订单（`t1.c1`）。\n  - **数据验证**：例如，`table1` 是用户表，`table2` 是权限表，查询需要找出所有拥有特定权限（`c4 = 'value'`）的用户（`t1.c1`）。\n  - **数据同步**：例如，`table1` 是目标表，`table2` 是源表，查询需要从目标表中筛选出与源表中某些条件匹配的数据。\n\n- **用户描述**：  \n  在上述业务场景中，用户可能遇到以下实际问题或需求：\n  - **订单管理**：用户需要查看某个特定客户的所有订单信息，以便进行客户分析或售后服务。\n  - **权限管理**：管理员需要列出所有拥有某项权限的用户，以便进行权限审计或调整。\n  - **数据整合**：用户需要从多个表中提取关联数据，以便生成报表或进行数据分析。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### 输出格式：\n\n- **查询意图**：  \n  该 SQL 语句的目的是从 `table1` 中筛选出满足条件的记录，具体是筛选出 `table1` 中 `c2` 列的值存在于 `table2` 中 `c3` 列的子查询结果中的记录，并返回这些记录的 `c1` 列的值。\n\n- **详细描述**：  \n  - **涉及的表**：\n    - `table1`（别名为 `t1`）：主查询的表，从中筛选数据。\n    - `table2`（别名为 `t2`）：子查询的表，用于生成筛选条件。\n  - **涉及的列**：\n    - `t1.c1`：主查询的结果列，即需要返回的数据。\n    - `t1.c2`：主查询的条件列，用于与子查询的结果进行比较。\n    - `t2.c3`：子查询的结果列，其值将用于筛选 `t1.c2`。\n    - `t2.c4`：子查询的条件列，用于筛选 `table2` 中的数据。\n  - **条件**：\n    - 子查询 `(select t2.c3 from table2 as t2 where t2.c4 = 'value')` 返回 `table2` 中 `c4` 列等于 `'value'` 的所有记录的 `c3` 列的值。\n    - 主查询的条件 `t1.c2 in (...)` 表示 `t1.c2` 的值必须存在于子查询返回的结果集中。\n\n- **业务场景**：  \n  这种查询通常用于解决以下业务场景：\n  - **关联数据筛选**：例如，`table1` 是订单表，`table2` 是客户表，查询需要找出所有属于特定客户（`c4 = 'value'`）的订单（`t1.c1`）。\n  - **数据验证**：例如，`table1` 是用户表，`table2` 是权限表，查询需要找出所有拥有特定权限（`c4 = 'value'`）的用户（`t1.c1`）。\n  - **数据同步**：例如，`table1` 是目标表，`table2` 是源表，查询需要从目标表中筛选出与源表中某些条件匹配的数据。\n\n- **用户描述**：  \n  在上述业务场景中，用户可能遇到以下实际问题或需求：\n  - **订单管理**：用户需要查看某个特定客户的所有订单信息，以便进行客户分析或售后服务。\n  - **权限管理**：管理员需要列出所有拥有某项权限的用户，以便进行权限审计或调整。\n  - **数据整合**：用户需要从多个表中提取关联数据，以便生成报表或进行数据分析。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]