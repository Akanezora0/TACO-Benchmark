[
  {
    "idx": 195,
    "sql_query": "select column1, column2, column3 from table1 where condition1;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect column1, column2, column3 from table1 where condition1;\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 195,
    "problem_description": "- **查询意图**：该 SQL 语句的目的是从 `table1` 表中筛选出满足 `condition1` 条件的记录，并返回这些记录的 `column1`、`column2` 和 `column3` 列的值。\n\n- **详细描述**：\n  - **表**：`table1` 是该查询操作的目标表，查询将从这张表中获取数据。\n  - **列**：`column1`、`column2` 和 `column3` 是查询结果中需要返回的列。这些列可能包含用户感兴趣的数据字段。\n  - **条件**：`condition1` 是筛选记录的条件，只有满足该条件的记录才会被包含在查询结果中。`condition1` 可能是一个简单的比较（如 `column1 = 'value'`），也可能是一个复杂的逻辑组合（如 `column1 > 100 AND column2 LIKE '%text%'`）。\n\n- **业务场景**：\n  - 该查询可能用于以下业务场景：\n    1. **数据筛选与展示**：用户需要从 `table1` 中筛选出符合特定条件的数据，并仅展示部分列（`column1`、`column2`、`column3`）。例如，在电商平台中，筛选出价格高于 100 元的商品，并展示商品名称、价格和库存。\n    2. **报表生成**：生成包含特定数据的报表，例如筛选出某个月份的销售记录，并展示销售 ID、销售金额和客户名称。\n    3. **数据分析**：对数据进行初步筛选，以便进一步分析。例如，筛选出活跃用户并展示其 ID、注册日期和最后登录时间。\n\n- **用户描述**：\n  - 用户可能需要解决以下实际问题或需求：\n    1. **查找特定数据**：用户需要快速找到满足某些条件的数据，例如查找所有未支付的订单或某个地区的客户信息。\n    2. **减少数据量**：用户可能只需要查看部分列的数据，而不是整张表的所有列，以减少数据加载时间和提高可读性。\n    3. **支持决策**：用户可能需要基于筛选出的数据做出业务决策，例如根据销售数据调整库存或制定营销策略。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n- **查询意图**：该 SQL 语句的目的是从 `table1` 表中筛选出满足 `condition1` 条件的记录，并返回这些记录的 `column1`、`column2` 和 `column3` 列的值。\n\n- **详细描述**：\n  - **表**：`table1` 是该查询操作的目标表，查询将从这张表中获取数据。\n  - **列**：`column1`、`column2` 和 `column3` 是查询结果中需要返回的列。这些列可能包含用户感兴趣的数据字段。\n  - **条件**：`condition1` 是筛选记录的条件，只有满足该条件的记录才会被包含在查询结果中。`condition1` 可能是一个简单的比较（如 `column1 = 'value'`），也可能是一个复杂的逻辑组合（如 `column1 > 100 AND column2 LIKE '%text%'`）。\n\n- **业务场景**：\n  - 该查询可能用于以下业务场景：\n    1. **数据筛选与展示**：用户需要从 `table1` 中筛选出符合特定条件的数据，并仅展示部分列（`column1`、`column2`、`column3`）。例如，在电商平台中，筛选出价格高于 100 元的商品，并展示商品名称、价格和库存。\n    2. **报表生成**：生成包含特定数据的报表，例如筛选出某个月份的销售记录，并展示销售 ID、销售金额和客户名称。\n    3. **数据分析**：对数据进行初步筛选，以便进一步分析。例如，筛选出活跃用户并展示其 ID、注册日期和最后登录时间。\n\n- **用户描述**：\n  - 用户可能需要解决以下实际问题或需求：\n    1. **查找特定数据**：用户需要快速找到满足某些条件的数据，例如查找所有未支付的订单或某个地区的客户信息。\n    2. **减少数据量**：用户可能只需要查看部分列的数据，而不是整张表的所有列，以减少数据加载时间和提高可读性。\n    3. **支持决策**：用户可能需要基于筛选出的数据做出业务决策，例如根据销售数据调整库存或制定营销策略。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]