[
  {
    "idx": 31,
    "sql_query": "SELECT column1, column2, column3, column4 FROM tableName WHERE condition1 = 'value1' AND condition2 = 'value2'",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT column1, column2, column3, column4 FROM tableName WHERE condition1 = 'value1' AND condition2 = 'value2'\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 31,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从 `tableName` 表中查询符合 `condition1 = 'value1'` 和 `condition2 = 'value2'` 条件的记录，并返回这些记录的 `column1`、`column2`、`column3` 和 `column4` 列的值。\n\n---\n\n### **详细描述**  \n1. **表（tableName）**：  \n   - 查询的目标表是 `tableName`，该表存储了业务相关的数据。  \n   - 表的具体含义取决于业务场景，可能是一个用户表、订单表、产品表等。  \n\n2. **列（column1, column2, column3, column4）**：  \n   - 查询返回的列包括 `column1`、`column2`、`column3` 和 `column4`，这些列可能代表不同的业务属性，如用户ID、姓名、年龄、注册日期等。  \n   - 具体列的含义需要结合表的结构和业务背景来理解。  \n\n3. **条件（condition1 = 'value1' AND condition2 = 'value2'）**：  \n   - 查询条件是两个逻辑与（`AND`）连接的条件，即只返回同时满足 `condition1 = 'value1'` 和 `condition2 = 'value2'` 的记录。  \n   - `condition1` 和 `condition2` 可能是表的某些列，如 `status = 'active'` 或 `category = 'electronics'`。  \n   - `'value1'` 和 `'value2'` 是具体的筛选值，可能是字符串、数字或其他数据类型。  \n\n---\n\n### **业务场景**  \n1. **示例 1：用户管理**  \n   - 表：`users`（用户表）  \n   - 列：`user_id`、`username`、`email`、`registration_date`  \n   - 条件：`status = 'active' AND country = 'USA'`  \n   - 业务场景：查询所有活跃（`status = 'active'`）且位于美国（`country = 'USA'`）的用户信息，用于发送营销邮件或分析用户分布。  \n\n2. **示例 2：订单查询**  \n   - 表：`orders`（订单表）  \n   - 列：`order_id`、`customer_id`、`order_date`、`total_amount`  \n   - 条件：`payment_status = 'paid' AND shipping_status = 'pending'`  \n   - 业务场景：查询已支付（`payment_status = 'paid'`）但尚未发货（`shipping_status = 'pending'`）的订单，以便安排物流。  \n\n3. **示例 3：产品筛选**  \n   - 表：`products`（产品表）  \n   - 列：`product_id`、`name`、`price`、`stock`  \n   - 条件：`category = 'electronics' AND price < 1000`  \n   - 业务场景：查询价格低于 1000 元的电子产品（`category = 'electronics'`），用于促销活动或库存管理。  \n\n---\n\n### **用户描述**  \n在上述业务场景中，用户可能遇到以下实际问题或需求：  \n\n1. **用户管理**：  \n   - 问题：公司需要针对美国地区的活跃用户推送优惠活动，但不知道如何快速筛选目标用户。  \n   - 需求：通过 SQL 查询获取符合条件的用户列表，以便进行精准营销。  \n\n2. **订单查询**：  \n   - 问题：客服团队需要处理已支付但未发货的订单，但手动查找效率低下。  \n   - 需求：通过 SQL 查询自动筛选这类订单，提高处理效率。  \n\n3. **产品筛选**：  \n   - 问题：电商平台计划对低价电子产品进行促销，但缺乏快速筛选工具。  \n   - 需求：通过 SQL 查询获取符合条件的产品，以便制定促销策略。  \n\n---\n\n### **总结**  \n该 SQL 语句是一个典型的条件查询，用于从表中筛选符合特定条件的记录，并返回指定的列。其具体用途取决于表结构和业务需求，常见的应用包括数据筛选、报表生成、业务决策支持等。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从 `tableName` 表中查询符合 `condition1 = 'value1'` 和 `condition2 = 'value2'` 条件的记录，并返回这些记录的 `column1`、`column2`、`column3` 和 `column4` 列的值。\n\n---\n\n### **详细描述**  \n1. **表（tableName）**：  \n   - 查询的目标表是 `tableName`，该表存储了业务相关的数据。  \n   - 表的具体含义取决于业务场景，可能是一个用户表、订单表、产品表等。  \n\n2. **列（column1, column2, column3, column4）**：  \n   - 查询返回的列包括 `column1`、`column2`、`column3` 和 `column4`，这些列可能代表不同的业务属性，如用户ID、姓名、年龄、注册日期等。  \n   - 具体列的含义需要结合表的结构和业务背景来理解。  \n\n3. **条件（condition1 = 'value1' AND condition2 = 'value2'）**：  \n   - 查询条件是两个逻辑与（`AND`）连接的条件，即只返回同时满足 `condition1 = 'value1'` 和 `condition2 = 'value2'` 的记录。  \n   - `condition1` 和 `condition2` 可能是表的某些列，如 `status = 'active'` 或 `category = 'electronics'`。  \n   - `'value1'` 和 `'value2'` 是具体的筛选值，可能是字符串、数字或其他数据类型。  \n\n---\n\n### **业务场景**  \n1. **示例 1：用户管理**  \n   - 表：`users`（用户表）  \n   - 列：`user_id`、`username`、`email`、`registration_date`  \n   - 条件：`status = 'active' AND country = 'USA'`  \n   - 业务场景：查询所有活跃（`status = 'active'`）且位于美国（`country = 'USA'`）的用户信息，用于发送营销邮件或分析用户分布。  \n\n2. **示例 2：订单查询**  \n   - 表：`orders`（订单表）  \n   - 列：`order_id`、`customer_id`、`order_date`、`total_amount`  \n   - 条件：`payment_status = 'paid' AND shipping_status = 'pending'`  \n   - 业务场景：查询已支付（`payment_status = 'paid'`）但尚未发货（`shipping_status = 'pending'`）的订单，以便安排物流。  \n\n3. **示例 3：产品筛选**  \n   - 表：`products`（产品表）  \n   - 列：`product_id`、`name`、`price`、`stock`  \n   - 条件：`category = 'electronics' AND price < 1000`  \n   - 业务场景：查询价格低于 1000 元的电子产品（`category = 'electronics'`），用于促销活动或库存管理。  \n\n---\n\n### **用户描述**  \n在上述业务场景中，用户可能遇到以下实际问题或需求：  \n\n1. **用户管理**：  \n   - 问题：公司需要针对美国地区的活跃用户推送优惠活动，但不知道如何快速筛选目标用户。  \n   - 需求：通过 SQL 查询获取符合条件的用户列表，以便进行精准营销。  \n\n2. **订单查询**：  \n   - 问题：客服团队需要处理已支付但未发货的订单，但手动查找效率低下。  \n   - 需求：通过 SQL 查询自动筛选这类订单，提高处理效率。  \n\n3. **产品筛选**：  \n   - 问题：电商平台计划对低价电子产品进行促销，但缺乏快速筛选工具。  \n   - 需求：通过 SQL 查询获取符合条件的产品，以便制定促销策略。  \n\n---\n\n### **总结**  \n该 SQL 语句是一个典型的条件查询，用于从表中筛选符合特定条件的记录，并返回指定的列。其具体用途取决于表结构和业务需求，常见的应用包括数据筛选、报表生成、业务决策支持等。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]