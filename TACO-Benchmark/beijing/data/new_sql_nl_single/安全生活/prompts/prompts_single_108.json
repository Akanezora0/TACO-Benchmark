[
  {
    "idx": 108,
    "sql_query": "select count(*), sum(column2), avg(column3) from table1 where column1 = 'value'",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect count(*), sum(column2), avg(column3) from table1 where column1 = 'value'\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 108,
    "problem_description": "### **查询意图**：  \n该 SQL 语句的目的是从表 `table1` 中筛选出满足 `column1 = 'value'` 条件的记录，并计算这些记录的总数、`column2` 的总和以及 `column3` 的平均值。\n\n---\n\n### **详细描述**：  \n1. **涉及的表**：  \n   - `table1`：数据来源表，查询操作的目标表。  \n\n2. **涉及的列**：  \n   - `column1`：用于筛选数据的列，查询仅关注 `column1` 值为 `'value'` 的记录。  \n   - `column2`：计算该列所有满足条件的值的总和（`sum`）。  \n   - `column3`：计算该列所有满足条件的值的平均值（`avg`）。  \n\n3. **条件**：  \n   - `where column1 = 'value'`：仅选择 `column1` 列的值等于 `'value'` 的行。  \n\n4. **聚合函数**：  \n   - `count(*)`：统计满足条件的记录总数。  \n   - `sum(column2)`：计算满足条件的记录的 `column2` 列值的总和。  \n   - `avg(column3)`：计算满足条件的记录的 `column3` 列值的平均值。  \n\n---\n\n### **业务场景**：  \n1. **数据分析**：  \n   - 统计某一特定类别（`column1 = 'value'`）的数据量、数值总和及平均值，用于业务报告或决策支持。  \n   - 例如，计算某产品的销售数量、总销售额及平均售价。  \n\n2. **绩效评估**：  \n   - 计算某部门（`column1 = '部门A'`）的员工人数、总薪资及平均薪资，用于人力资源分析。  \n\n3. **质量控制**：  \n   - 统计某批次产品（`column1 = '批次123'`）的合格数量、总缺陷数及平均缺陷率，用于生产优化。  \n\n---\n\n### **用户描述**：  \n1. **问题/需求**：  \n   - 用户可能需要了解某一特定类别（如产品、部门、时间段等）的总体情况，包括数量、总和及平均值，以便进行业务分析或优化决策。  \n\n2. **实际示例**：  \n   - **销售经理**：想知道某款产品（`column1 = '产品A'`）的销售订单数、总销售额及平均订单金额，以评估市场表现。  \n   - **HR 专员**：需要统计某部门（`column1 = '研发部'`）的员工人数、总薪资支出及平均薪资，用于预算规划。  \n   - **生产主管**：希望计算某生产线（`column1 = '生产线B'`）的产量、总能耗及平均能耗，以优化生产效率。  \n\n通过该 SQL 查询，用户可以快速获取关键指标的汇总数据，支持数据驱动的决策。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**：  \n该 SQL 语句的目的是从表 `table1` 中筛选出满足 `column1 = 'value'` 条件的记录，并计算这些记录的总数、`column2` 的总和以及 `column3` 的平均值。\n\n---\n\n### **详细描述**：  \n1. **涉及的表**：  \n   - `table1`：数据来源表，查询操作的目标表。  \n\n2. **涉及的列**：  \n   - `column1`：用于筛选数据的列，查询仅关注 `column1` 值为 `'value'` 的记录。  \n   - `column2`：计算该列所有满足条件的值的总和（`sum`）。  \n   - `column3`：计算该列所有满足条件的值的平均值（`avg`）。  \n\n3. **条件**：  \n   - `where column1 = 'value'`：仅选择 `column1` 列的值等于 `'value'` 的行。  \n\n4. **聚合函数**：  \n   - `count(*)`：统计满足条件的记录总数。  \n   - `sum(column2)`：计算满足条件的记录的 `column2` 列值的总和。  \n   - `avg(column3)`：计算满足条件的记录的 `column3` 列值的平均值。  \n\n---\n\n### **业务场景**：  \n1. **数据分析**：  \n   - 统计某一特定类别（`column1 = 'value'`）的数据量、数值总和及平均值，用于业务报告或决策支持。  \n   - 例如，计算某产品的销售数量、总销售额及平均售价。  \n\n2. **绩效评估**：  \n   - 计算某部门（`column1 = '部门A'`）的员工人数、总薪资及平均薪资，用于人力资源分析。  \n\n3. **质量控制**：  \n   - 统计某批次产品（`column1 = '批次123'`）的合格数量、总缺陷数及平均缺陷率，用于生产优化。  \n\n---\n\n### **用户描述**：  \n1. **问题/需求**：  \n   - 用户可能需要了解某一特定类别（如产品、部门、时间段等）的总体情况，包括数量、总和及平均值，以便进行业务分析或优化决策。  \n\n2. **实际示例**：  \n   - **销售经理**：想知道某款产品（`column1 = '产品A'`）的销售订单数、总销售额及平均订单金额，以评估市场表现。  \n   - **HR 专员**：需要统计某部门（`column1 = '研发部'`）的员工人数、总薪资支出及平均薪资，用于预算规划。  \n   - **生产主管**：希望计算某生产线（`column1 = '生产线B'`）的产量、总能耗及平均能耗，以优化生产效率。  \n\n通过该 SQL 查询，用户可以快速获取关键指标的汇总数据，支持数据驱动的决策。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]