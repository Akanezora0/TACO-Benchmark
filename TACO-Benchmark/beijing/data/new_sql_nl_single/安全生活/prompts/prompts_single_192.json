[
  {
    "idx": 192,
    "sql_query": "SELECT column1, column2 FROM table1 - table2 WHERE condition = value ;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT column1, column2 FROM table1 - table2 WHERE condition = value ;\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 192,
    "problem_description": "# SQL 语句分析\n\n## 查询意图\n这个SQL语句的目的是从`table1`表中查询`column1`和`column2`列的数据，但需要排除那些也存在于`table2`表中的记录，并且只返回满足`condition = value`条件的记录。\n\n## 详细描述\n- **涉及的表**：\n  - `table1`：主表，从中选择数据\n  - `table2`：用于排除与`table1`中匹配的记录\n\n- **涉及的列**：\n  - `column1`, `column2`：从`table1`中选择的列\n  - 语句中未明确显示但隐含的列：`table1`和`table2`之间必须有某些关联列用于比较和排除\n\n- **操作**：\n  - `table1 - table2`：这是集合差操作，表示从`table1`中排除那些也存在于`table2`中的记录\n  - `WHERE condition = value`：进一步筛选满足特定条件的记录\n\n- **注意事项**：\n  - 语法上，标准SQL中集合差操作通常使用`EXCEPT`或`MINUS`关键字，而不是减号`-`\n  - 实际执行可能需要写成：`SELECT column1, column2 FROM table1 WHERE condition = value AND [某些条件确保不在table2中]`\n\n## 业务场景\n这种查询可能用于以下业务场景：\n1. **客户管理**：找出未购买过特定产品的客户（所有客户减去已购买客户）\n2. **库存管理**：查询缺货商品（所有商品减去有库存的商品）\n3. **任务分配**：找出未分配的任务（所有任务减去已分配任务）\n4. **会员服务**：识别未使用过某项服务的会员（所有会员减去已使用服务的会员）\n\n## 用户描述\n在上述业务场景中，用户可能面临的实际问题或需求包括：\n- 营销部门需要针对从未购买过某类产品的客户进行精准营销\n- 仓库管理员需要快速识别哪些商品需要补货\n- 项目经理需要了解哪些任务还没有分配给团队成员\n- 客户服务团队希望识别哪些会员尚未体验过新推出的服务，以便进行推广\n\n这种查询帮助用户快速识别\"缺失\"或\"未完成\"的项目，以便采取针对性的行动。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n# SQL 语句分析\n\n## 查询意图\n这个SQL语句的目的是从`table1`表中查询`column1`和`column2`列的数据，但需要排除那些也存在于`table2`表中的记录，并且只返回满足`condition = value`条件的记录。\n\n## 详细描述\n- **涉及的表**：\n  - `table1`：主表，从中选择数据\n  - `table2`：用于排除与`table1`中匹配的记录\n\n- **涉及的列**：\n  - `column1`, `column2`：从`table1`中选择的列\n  - 语句中未明确显示但隐含的列：`table1`和`table2`之间必须有某些关联列用于比较和排除\n\n- **操作**：\n  - `table1 - table2`：这是集合差操作，表示从`table1`中排除那些也存在于`table2`中的记录\n  - `WHERE condition = value`：进一步筛选满足特定条件的记录\n\n- **注意事项**：\n  - 语法上，标准SQL中集合差操作通常使用`EXCEPT`或`MINUS`关键字，而不是减号`-`\n  - 实际执行可能需要写成：`SELECT column1, column2 FROM table1 WHERE condition = value AND [某些条件确保不在table2中]`\n\n## 业务场景\n这种查询可能用于以下业务场景：\n1. **客户管理**：找出未购买过特定产品的客户（所有客户减去已购买客户）\n2. **库存管理**：查询缺货商品（所有商品减去有库存的商品）\n3. **任务分配**：找出未分配的任务（所有任务减去已分配任务）\n4. **会员服务**：识别未使用过某项服务的会员（所有会员减去已使用服务的会员）\n\n## 用户描述\n在上述业务场景中，用户可能面临的实际问题或需求包括：\n- 营销部门需要针对从未购买过某类产品的客户进行精准营销\n- 仓库管理员需要快速识别哪些商品需要补货\n- 项目经理需要了解哪些任务还没有分配给团队成员\n- 客户服务团队希望识别哪些会员尚未体验过新推出的服务，以便进行推广\n\n这种查询帮助用户快速识别\"缺失\"或\"未完成\"的项目，以便采取针对性的行动。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]