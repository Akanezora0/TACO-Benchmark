[
  {
    "idx": 198,
    "sql_query": "select column1, column2, column3, column4, column5 from table1 where condition1 = 'value1' and condition2 = 'value2' order by column6 ;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect column1, column2, column3, column4, column5 from table1 where condition1 = 'value1' and condition2 = 'value2' order by column6 ;\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 198,
    "problem_description": "### 查询意图：\n该 SQL 语句的目的是从 `table1` 表中筛选出符合特定条件的数据，并按照某一列进行排序，最终返回指定的列。\n\n### 详细描述：\n1. **表**：查询涉及的表是 `table1`。\n2. **列**：\n   - 查询返回的列包括 `column1`、`column2`、`column3`、`column4` 和 `column5`。\n   - 排序依据的列是 `column6`（尽管该列不在返回的列中）。\n3. **条件**：\n   - `condition1 = 'value1'`：筛选 `condition1` 列的值等于 `'value1'` 的记录。\n   - `condition2 = 'value2'`：筛选 `condition2` 列的值等于 `'value2'` 的记录。\n4. **排序**：查询结果会按照 `column6` 列的值进行排序（默认是升序，除非指定了 `DESC`）。\n\n### 业务场景：\n1. **数据筛选与展示**：该查询可能用于从 `table1` 中筛选出符合特定条件的数据，并展示部分列的信息。例如：\n   - 在电商平台中，筛选出某个类别的商品（`condition1` 为类别，`condition2` 为状态），并展示商品名称、价格、库存等信息（`column1`、`column2` 等），最后按销量（`column6`）排序。\n   - 在客户管理系统中，筛选出某个地区的活跃客户（`condition1` 为地区，`condition2` 为活跃状态），并展示客户姓名、联系方式等信息（`column1`、`column2` 等），最后按注册时间（`column6`）排序。\n\n2. **报表生成**：该查询可能用于生成报表，例如筛选出特定时间段或特定状态的数据，并按照某种规则排序后导出。\n\n### 用户描述：\n1. **用户需求**：\n   - 用户可能需要查看满足某些特定条件的数据，例如“查看所有未支付的订单”或“查看某个部门的所有员工”。\n   - 用户希望结果按照某一列排序，例如“按订单金额从高到低排序”或“按入职时间从早到晚排序”。\n2. **实际问题**：\n   - 用户可能面临数据量庞大、难以手动筛选的问题，需要通过 SQL 快速定位到目标数据。\n   - 用户可能需要将查询结果用于进一步分析或展示，因此需要特定的列和排序方式。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### 查询意图：\n该 SQL 语句的目的是从 `table1` 表中筛选出符合特定条件的数据，并按照某一列进行排序，最终返回指定的列。\n\n### 详细描述：\n1. **表**：查询涉及的表是 `table1`。\n2. **列**：\n   - 查询返回的列包括 `column1`、`column2`、`column3`、`column4` 和 `column5`。\n   - 排序依据的列是 `column6`（尽管该列不在返回的列中）。\n3. **条件**：\n   - `condition1 = 'value1'`：筛选 `condition1` 列的值等于 `'value1'` 的记录。\n   - `condition2 = 'value2'`：筛选 `condition2` 列的值等于 `'value2'` 的记录。\n4. **排序**：查询结果会按照 `column6` 列的值进行排序（默认是升序，除非指定了 `DESC`）。\n\n### 业务场景：\n1. **数据筛选与展示**：该查询可能用于从 `table1` 中筛选出符合特定条件的数据，并展示部分列的信息。例如：\n   - 在电商平台中，筛选出某个类别的商品（`condition1` 为类别，`condition2` 为状态），并展示商品名称、价格、库存等信息（`column1`、`column2` 等），最后按销量（`column6`）排序。\n   - 在客户管理系统中，筛选出某个地区的活跃客户（`condition1` 为地区，`condition2` 为活跃状态），并展示客户姓名、联系方式等信息（`column1`、`column2` 等），最后按注册时间（`column6`）排序。\n\n2. **报表生成**：该查询可能用于生成报表，例如筛选出特定时间段或特定状态的数据，并按照某种规则排序后导出。\n\n### 用户描述：\n1. **用户需求**：\n   - 用户可能需要查看满足某些特定条件的数据，例如“查看所有未支付的订单”或“查看某个部门的所有员工”。\n   - 用户希望结果按照某一列排序，例如“按订单金额从高到低排序”或“按入职时间从早到晚排序”。\n2. **实际问题**：\n   - 用户可能面临数据量庞大、难以手动筛选的问题，需要通过 SQL 快速定位到目标数据。\n   - 用户可能需要将查询结果用于进一步分析或展示，因此需要特定的列和排序方式。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]