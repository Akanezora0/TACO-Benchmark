[
  {
    "idx": 103,
    "sql_query": "SELECT column1, column2 FROM table1 WHERE condition1 = 'value1' AND condition2 > 10;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT column1, column2 FROM table1 WHERE condition1 = 'value1' AND condition2 > 10;\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 103,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出符合特定条件的数据，并返回 `column1` 和 `column2` 两列的值。  \n\n### **详细描述**  \n1. **涉及的表**：  \n   - `table1`：该查询操作的目标表，从中提取数据。  \n\n2. **涉及的列**：  \n   - `column1` 和 `column2`：查询结果中需要返回的列。  \n   - `condition1` 和 `condition2`：用于筛选数据的条件列。  \n\n3. **筛选条件**：  \n   - `condition1 = 'value1'`：要求 `condition1` 列的值必须等于字符串 `'value1'`。  \n   - `condition2 > 10`：要求 `condition2` 列的值必须大于 10。  \n\n4. **查询逻辑**：  \n   - 该 SQL 语句会扫描 `table1` 表，检查每一行数据是否同时满足 `condition1 = 'value1'` 和 `condition2 > 10` 两个条件。  \n   - 如果满足，则返回该行的 `column1` 和 `column2` 的值。  \n\n### **业务场景**  \n1. **示例场景 1（用户管理）**：  \n   - `table1` 可能是用户表，`condition1` 是用户状态（如 `status = 'active'`），`condition2` 是用户积分（如 `points > 10`）。  \n   - 该查询可用于筛选出“活跃且积分大于 10”的用户，以便发送优惠券或推送活动通知。  \n\n2. **示例场景 2（销售数据分析）**：  \n   - `table1` 可能是订单表，`condition1` 是订单类型（如 `order_type = 'online'`），`condition2` 是订单金额（如 `amount > 10`）。  \n   - 该查询可用于统计“在线订单且金额超过 10 元”的记录，分析高价值订单的分布情况。  \n\n### **用户描述**  \n1. **用户管理场景**：  \n   - **用户需求**：运营人员希望找到高活跃度（状态为 `'active'`）且具有一定积分（大于 10）的用户，以便进行精准营销。  \n   - **实际问题**：如果不使用 SQL 筛选，可能需要手动遍历所有用户数据，效率低下且容易出错。  \n\n2. **销售分析场景**：  \n   - **用户需求**：市场团队需要分析在线渠道（`order_type = 'online'`）中金额较大的订单（`amount > 10`），以优化促销策略。  \n   - **实际问题**：如果数据量庞大，手动筛选不现实，SQL 查询可以快速提供所需数据。  \n\n### **总结**  \n该 SQL 语句是一个典型的条件查询，适用于需要从表中提取符合特定业务规则的数据的场景，如用户筛选、销售分析、日志查询等。通过 `WHERE` 子句的组合条件，可以精准定位目标数据，提高数据检索效率。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出符合特定条件的数据，并返回 `column1` 和 `column2` 两列的值。  \n\n### **详细描述**  \n1. **涉及的表**：  \n   - `table1`：该查询操作的目标表，从中提取数据。  \n\n2. **涉及的列**：  \n   - `column1` 和 `column2`：查询结果中需要返回的列。  \n   - `condition1` 和 `condition2`：用于筛选数据的条件列。  \n\n3. **筛选条件**：  \n   - `condition1 = 'value1'`：要求 `condition1` 列的值必须等于字符串 `'value1'`。  \n   - `condition2 > 10`：要求 `condition2` 列的值必须大于 10。  \n\n4. **查询逻辑**：  \n   - 该 SQL 语句会扫描 `table1` 表，检查每一行数据是否同时满足 `condition1 = 'value1'` 和 `condition2 > 10` 两个条件。  \n   - 如果满足，则返回该行的 `column1` 和 `column2` 的值。  \n\n### **业务场景**  \n1. **示例场景 1（用户管理）**：  \n   - `table1` 可能是用户表，`condition1` 是用户状态（如 `status = 'active'`），`condition2` 是用户积分（如 `points > 10`）。  \n   - 该查询可用于筛选出“活跃且积分大于 10”的用户，以便发送优惠券或推送活动通知。  \n\n2. **示例场景 2（销售数据分析）**：  \n   - `table1` 可能是订单表，`condition1` 是订单类型（如 `order_type = 'online'`），`condition2` 是订单金额（如 `amount > 10`）。  \n   - 该查询可用于统计“在线订单且金额超过 10 元”的记录，分析高价值订单的分布情况。  \n\n### **用户描述**  \n1. **用户管理场景**：  \n   - **用户需求**：运营人员希望找到高活跃度（状态为 `'active'`）且具有一定积分（大于 10）的用户，以便进行精准营销。  \n   - **实际问题**：如果不使用 SQL 筛选，可能需要手动遍历所有用户数据，效率低下且容易出错。  \n\n2. **销售分析场景**：  \n   - **用户需求**：市场团队需要分析在线渠道（`order_type = 'online'`）中金额较大的订单（`amount > 10`），以优化促销策略。  \n   - **实际问题**：如果数据量庞大，手动筛选不现实，SQL 查询可以快速提供所需数据。  \n\n### **总结**  \n该 SQL 语句是一个典型的条件查询，适用于需要从表中提取符合特定业务规则的数据的场景，如用户筛选、销售分析、日志查询等。通过 `WHERE` 子句的组合条件，可以精准定位目标数据，提高数据检索效率。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]