[
  {
    "idx": 193,
    "sql_query": "SELECT table1.column1, table1.column2, table2.column3 \nFROM table1 \nJOIN table2 ON table1.common_column = table2.common_column \nWHERE table1.unique_column = 'value' AND table2.another_unique_column = 'another_value' AND (table1.function(column1) = some_value)",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT table1.column1, table1.column2, table2.column3 \nFROM table1 \nJOIN table2 ON table1.common_column = table2.common_column \nWHERE table1.unique_column = 'value' AND table2.another_unique_column = 'another_value' AND (table1.function(column1) = some_value)\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 193,
    "problem_description": "- **查询意图**：该 SQL 语句的目的是从两个关联的表（`table1` 和 `table2`）中检索满足特定条件的数据，并返回 `table1` 的两列和 `table2` 的一列。\n\n- **详细描述**：\n  - **涉及的表**：\n    - `table1`：包含 `column1`、`column2`、`common_column`、`unique_column` 等列。\n    - `table2`：包含 `column3`、`common_column`、`another_unique_column` 等列。\n  - **关联条件**：`table1.common_column = table2.common_column`，表示通过 `common_column` 列将两个表关联起来。\n  - **筛选条件**：\n    - `table1.unique_column = 'value'`：筛选 `table1` 中 `unique_column` 列值为 `'value'` 的记录。\n    - `table2.another_unique_column = 'another_value'`：筛选 `table2` 中 `another_unique_column` 列值为 `'another_value'` 的记录。\n    - `table1.function(column1) = some_value`：对 `table1` 的 `column1` 列应用某个函数（如 `UPPER`、`LOWER`、`SUBSTRING` 等），并筛选结果为 `some_value` 的记录。\n  - **返回列**：`table1.column1`、`table1.column2` 和 `table2.column3`。\n\n- **业务场景**：\n  - 该查询可以用于需要从两个关联表中提取特定信息的场景。例如：\n    - 在电商系统中，`table1` 可能是订单表，`table2` 可能是客户表。查询可以用于查找特定客户（`another_unique_column = 'another_value'`）的特定订单（`unique_column = 'value'`），并返回订单的某些信息（如订单编号、订单日期）和客户的某些信息（如客户姓名）。\n    - 在人力资源系统中，`table1` 可能是员工表，`table2` 可能是部门表。查询可以用于查找特定部门（`another_unique_column = 'another_value'`）中满足特定条件的员工（如 `function(column1)` 可能是计算员工工龄的函数，筛选工龄为 `some_value` 的员工），并返回员工的姓名、职位和部门名称。\n\n- **用户描述**：\n  - 在电商系统中，用户可能需要查找某个VIP客户（`another_value`）的某个特定订单（`value`），并了解该订单的详细信息（如商品名称、订单日期）和客户的基本信息（如联系方式）。\n  - 在人力资源系统中，HR可能需要查找某个部门（如“技术部”）中工龄为5年的员工，并获取这些员工的姓名、职位和部门名称，以便进行晋升或奖励评估。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n- **查询意图**：该 SQL 语句的目的是从两个关联的表（`table1` 和 `table2`）中检索满足特定条件的数据，并返回 `table1` 的两列和 `table2` 的一列。\n\n- **详细描述**：\n  - **涉及的表**：\n    - `table1`：包含 `column1`、`column2`、`common_column`、`unique_column` 等列。\n    - `table2`：包含 `column3`、`common_column`、`another_unique_column` 等列。\n  - **关联条件**：`table1.common_column = table2.common_column`，表示通过 `common_column` 列将两个表关联起来。\n  - **筛选条件**：\n    - `table1.unique_column = 'value'`：筛选 `table1` 中 `unique_column` 列值为 `'value'` 的记录。\n    - `table2.another_unique_column = 'another_value'`：筛选 `table2` 中 `another_unique_column` 列值为 `'another_value'` 的记录。\n    - `table1.function(column1) = some_value`：对 `table1` 的 `column1` 列应用某个函数（如 `UPPER`、`LOWER`、`SUBSTRING` 等），并筛选结果为 `some_value` 的记录。\n  - **返回列**：`table1.column1`、`table1.column2` 和 `table2.column3`。\n\n- **业务场景**：\n  - 该查询可以用于需要从两个关联表中提取特定信息的场景。例如：\n    - 在电商系统中，`table1` 可能是订单表，`table2` 可能是客户表。查询可以用于查找特定客户（`another_unique_column = 'another_value'`）的特定订单（`unique_column = 'value'`），并返回订单的某些信息（如订单编号、订单日期）和客户的某些信息（如客户姓名）。\n    - 在人力资源系统中，`table1` 可能是员工表，`table2` 可能是部门表。查询可以用于查找特定部门（`another_unique_column = 'another_value'`）中满足特定条件的员工（如 `function(column1)` 可能是计算员工工龄的函数，筛选工龄为 `some_value` 的员工），并返回员工的姓名、职位和部门名称。\n\n- **用户描述**：\n  - 在电商系统中，用户可能需要查找某个VIP客户（`another_value`）的某个特定订单（`value`），并了解该订单的详细信息（如商品名称、订单日期）和客户的基本信息（如联系方式）。\n  - 在人力资源系统中，HR可能需要查找某个部门（如“技术部”）中工龄为5年的员工，并获取这些员工的姓名、职位和部门名称，以便进行晋升或奖励评估。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]