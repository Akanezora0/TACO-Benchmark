[
  {
    "idx": 115,
    "sql_query": "SELECT column1, column2 FROM table1 - table2 WHERE condition;",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT column1, column2 FROM table1 - table2 WHERE condition;\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 115,
    "problem_description": "# SQL 语句分析\n\n## 查询意图\n这个 SQL 语句的目的是从 `table1` 和 `table2` 的差集（即存在于 `table1` 但不存在于 `table2` 的记录）中，选择满足特定条件的记录，并返回这些记录的 `column1` 和 `column2` 列。\n\n## 详细描述\n- **表操作**：使用了 `table1 - table2` 语法，这表示获取 `table1` 中不存在于 `table2` 的记录（差集运算）\n- **列选择**：从结果集中选择了 `column1` 和 `column2` 两列\n- **条件筛选**：通过 `WHERE condition` 对差集结果进一步筛选，只返回满足条件的记录\n\n## 业务场景\n这种查询适用于需要找出两个表差异数据的场景，例如：\n1. **数据同步验证**：找出源表中存在但目标表中不存在的记录，用于验证数据同步是否完整\n2. **异常检测**：识别应该存在但实际缺失的数据条目\n3. **数据清理**：找出主表中存在但关联表中已删除的孤立记录\n\n## 用户描述\n用户可能遇到的实际问题或需求包括：\n- \"我需要检查从生产环境同步到测试环境的数据是否完整，找出哪些记录没有成功同步\"\n- \"系统升级后，我想确认哪些旧数据没有被迁移到新系统中\"\n- \"我们的客户数据库中有一些客户没有对应的订单记录，我想找出这些潜在客户\"\n\n注意：标准 SQL 中通常不直接使用 `-` 运算符来表示差集，实际应用中更常见的是使用 `EXCEPT` 或 `NOT EXISTS` 等语法。这个查询可能是某种特定数据库方言的写法。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n# SQL 语句分析\n\n## 查询意图\n这个 SQL 语句的目的是从 `table1` 和 `table2` 的差集（即存在于 `table1` 但不存在于 `table2` 的记录）中，选择满足特定条件的记录，并返回这些记录的 `column1` 和 `column2` 列。\n\n## 详细描述\n- **表操作**：使用了 `table1 - table2` 语法，这表示获取 `table1` 中不存在于 `table2` 的记录（差集运算）\n- **列选择**：从结果集中选择了 `column1` 和 `column2` 两列\n- **条件筛选**：通过 `WHERE condition` 对差集结果进一步筛选，只返回满足条件的记录\n\n## 业务场景\n这种查询适用于需要找出两个表差异数据的场景，例如：\n1. **数据同步验证**：找出源表中存在但目标表中不存在的记录，用于验证数据同步是否完整\n2. **异常检测**：识别应该存在但实际缺失的数据条目\n3. **数据清理**：找出主表中存在但关联表中已删除的孤立记录\n\n## 用户描述\n用户可能遇到的实际问题或需求包括：\n- \"我需要检查从生产环境同步到测试环境的数据是否完整，找出哪些记录没有成功同步\"\n- \"系统升级后，我想确认哪些旧数据没有被迁移到新系统中\"\n- \"我们的客户数据库中有一些客户没有对应的订单记录，我想找出这些潜在客户\"\n\n注意：标准 SQL 中通常不直接使用 `-` 运算符来表示差集，实际应用中更常见的是使用 `EXCEPT` 或 `NOT EXISTS` 等语法。这个查询可能是某种特定数据库方言的写法。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]