[
  {
    "idx": 16,
    "sql_query": "select column1, column2, column3, column4, column5, column6 from table1 where condition = 'value'",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect column1, column2, column3, column4, column5, column6 from table1 where condition = 'value'\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 16,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出符合 `condition = 'value'` 条件的数据，并返回 `column1` 至 `column6` 这六列的值。\n\n---\n\n### **详细描述**  \n1. **涉及的表**：  \n   - `table1`：该查询操作的目标表，具体业务含义需结合实际情况（如用户表、订单表、日志表等）。\n\n2. **涉及的列**：  \n   - **查询列**：`column1`、`column2`、`column3`、`column4`、`column5`、`column6`  \n     这些列可能是表中的关键字段，例如用户ID、姓名、时间戳、状态标志、数值型数据等。  \n   - **条件列**：`condition`  \n     该列用于筛选数据，其值为 `'value'`（可能表示状态、分类、标识符等，如 `status = 'active'` 或 `category = 'electronics'`）。\n\n3. **筛选条件**：  \n   - `condition = 'value'`：仅选择 `condition` 列的值等于 `'value'` 的记录。  \n     - 这里的 `'value'` 可能是枚举值（如 `'paid'`、`'pending'`）、布尔标志（如 `'Y'`/`'N'`）或分类标签。\n\n---\n\n### **业务场景**  \n1. **可能的表与列含义**：  \n   - 如果 `table1` 是订单表：  \n     - `column1`~`column6` 可能为订单ID、客户ID、订单金额、下单时间、支付状态、物流单号。  \n     - `condition = 'value'` 可能筛选特定状态的订单（如 `status = 'shipped'`）。  \n   - 如果 `table1` 是用户表：  \n     - 列可能为用户ID、姓名、注册时间、会员等级、最后登录IP、账户状态。  \n     - 条件可能是 `account_status = 'active'`，用于筛选活跃用户。\n\n2. **典型场景**：  \n   - 统计或导出符合特定条件的数据（如“所有已付款订单”或“所有高等级用户”）。  \n   - 前端页面展示过滤后的列表（如后台管理系统中的订单查询）。  \n\n---\n\n### **用户描述**  \n1. **实际问题**：  \n   - 用户需要快速获取某一类特定数据（如“查找所有未处理的客服工单”或“导出本月成交的订单”）。  \n   - 用户可能需要在大量数据中聚焦关键信息，避免全表扫描带来的性能问题。  \n\n2. **需求背景**：  \n   - 例如，运营人员需要分析“所有已取消的订单”的原因，则通过 `where status = 'cancelled'` 快速过滤目标数据。  \n   - 或开发人员需要调试，筛选 `debug_flag = 'true'` 的日志记录。  \n\n---\n\n### **补充说明**  \n- 若 `condition` 是索引列，该查询效率较高；否则可能全表扫描。  \n- 实际业务中，`'value'` 可能是动态参数（如 `where user_id = ${input_id}`），需注意SQL注入风险。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出符合 `condition = 'value'` 条件的数据，并返回 `column1` 至 `column6` 这六列的值。\n\n---\n\n### **详细描述**  \n1. **涉及的表**：  \n   - `table1`：该查询操作的目标表，具体业务含义需结合实际情况（如用户表、订单表、日志表等）。\n\n2. **涉及的列**：  \n   - **查询列**：`column1`、`column2`、`column3`、`column4`、`column5`、`column6`  \n     这些列可能是表中的关键字段，例如用户ID、姓名、时间戳、状态标志、数值型数据等。  \n   - **条件列**：`condition`  \n     该列用于筛选数据，其值为 `'value'`（可能表示状态、分类、标识符等，如 `status = 'active'` 或 `category = 'electronics'`）。\n\n3. **筛选条件**：  \n   - `condition = 'value'`：仅选择 `condition` 列的值等于 `'value'` 的记录。  \n     - 这里的 `'value'` 可能是枚举值（如 `'paid'`、`'pending'`）、布尔标志（如 `'Y'`/`'N'`）或分类标签。\n\n---\n\n### **业务场景**  \n1. **可能的表与列含义**：  \n   - 如果 `table1` 是订单表：  \n     - `column1`~`column6` 可能为订单ID、客户ID、订单金额、下单时间、支付状态、物流单号。  \n     - `condition = 'value'` 可能筛选特定状态的订单（如 `status = 'shipped'`）。  \n   - 如果 `table1` 是用户表：  \n     - 列可能为用户ID、姓名、注册时间、会员等级、最后登录IP、账户状态。  \n     - 条件可能是 `account_status = 'active'`，用于筛选活跃用户。\n\n2. **典型场景**：  \n   - 统计或导出符合特定条件的数据（如“所有已付款订单”或“所有高等级用户”）。  \n   - 前端页面展示过滤后的列表（如后台管理系统中的订单查询）。  \n\n---\n\n### **用户描述**  \n1. **实际问题**：  \n   - 用户需要快速获取某一类特定数据（如“查找所有未处理的客服工单”或“导出本月成交的订单”）。  \n   - 用户可能需要在大量数据中聚焦关键信息，避免全表扫描带来的性能问题。  \n\n2. **需求背景**：  \n   - 例如，运营人员需要分析“所有已取消的订单”的原因，则通过 `where status = 'cancelled'` 快速过滤目标数据。  \n   - 或开发人员需要调试，筛选 `debug_flag = 'true'` 的日志记录。  \n\n---\n\n### **补充说明**  \n- 若 `condition` 是索引列，该查询效率较高；否则可能全表扫描。  \n- 实际业务中，`'value'` 可能是动态参数（如 `where user_id = ${input_id}`），需注意SQL注入风险。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]