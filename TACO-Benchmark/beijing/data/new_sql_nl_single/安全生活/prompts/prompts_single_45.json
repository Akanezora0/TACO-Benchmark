[
  {
    "idx": 45,
    "sql_query": "select column1 as alias1, column2 as alias2 from table1 where condition = value",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect column1 as alias1, column2 as alias2 from table1 where condition = value\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 45,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出符合 `condition = value` 条件的记录，并返回 `column1` 和 `column2` 两列的数据，同时分别将它们命名为 `alias1` 和 `alias2`（即列别名）。  \n\n### **详细描述**  \n1. **涉及的表**：  \n   - `table1`：查询的目标表，从中提取数据。  \n\n2. **涉及的列**：  \n   - `column1`：表中的某一列，查询结果中会以 `alias1` 作为列名显示。  \n   - `column2`：表中的另一列，查询结果中会以 `alias2` 作为列名显示。  \n\n3. **条件**：  \n   - `condition = value`：筛选条件，仅返回 `condition` 列的值等于 `value` 的记录。  \n\n4. **列别名**：  \n   - `as alias1` 和 `as alias2`：将 `column1` 和 `column2` 在查询结果中分别显示为 `alias1` 和 `alias2`，提高可读性或适配业务需求。  \n\n### **业务场景**  \n该查询可能适用于以下业务场景：  \n- **数据筛选与展示**：从某个数据表中提取特定条件下的数据，并以更直观的列名呈现。  \n- **报表生成**：在生成业务报表时，可能需要重命名列名以符合业务术语。  \n- **数据分析**：提取特定条件下的数据用于进一步分析，例如统计、可视化等。  \n\n### **用户描述**  \n用户可能遇到的实际问题或需求包括：  \n1. **数据查询需求**：  \n   - 用户需要查看 `table1` 表中满足 `condition = value` 的所有记录，但只关心 `column1` 和 `column2` 两列的数据。  \n   - 例如，在订单表中查询所有“已支付”订单的 `订单ID` 和 `订单金额`，并希望列名显示为 `订单编号` 和 `金额`。  \n\n2. **数据展示优化**：  \n   - 原始列名（如 `column1`）可能不够直观，用户希望在查询结果中使用更易理解的别名（如 `alias1`）。  \n   - 例如，数据库中的列名可能是 `user_id`，但业务报表中需要显示为 `用户ID`。  \n\n3. **条件过滤需求**：  \n   - 用户只需要特定条件下的数据，例如状态为“已完成”的记录、某个时间范围的数据，或者某个分类下的条目。  \n   - 例如，在员工表中查询 `部门 = \"销售部\"` 的员工姓名和工号，并分别命名为 `员工姓名` 和 `工号`。  \n\n### **总结**  \n这条 SQL 语句的核心是：  \n1. **从 `table1` 表中选择数据**。  \n2. **仅返回满足 `condition = value` 的记录**。  \n3. **提取 `column1` 和 `column2` 列，并分别命名为 `alias1` 和 `alias2`**。  \n4. **适用于数据查询、报表生成、数据分析等场景**，帮助用户更高效地获取和展示所需信息。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出符合 `condition = value` 条件的记录，并返回 `column1` 和 `column2` 两列的数据，同时分别将它们命名为 `alias1` 和 `alias2`（即列别名）。  \n\n### **详细描述**  \n1. **涉及的表**：  \n   - `table1`：查询的目标表，从中提取数据。  \n\n2. **涉及的列**：  \n   - `column1`：表中的某一列，查询结果中会以 `alias1` 作为列名显示。  \n   - `column2`：表中的另一列，查询结果中会以 `alias2` 作为列名显示。  \n\n3. **条件**：  \n   - `condition = value`：筛选条件，仅返回 `condition` 列的值等于 `value` 的记录。  \n\n4. **列别名**：  \n   - `as alias1` 和 `as alias2`：将 `column1` 和 `column2` 在查询结果中分别显示为 `alias1` 和 `alias2`，提高可读性或适配业务需求。  \n\n### **业务场景**  \n该查询可能适用于以下业务场景：  \n- **数据筛选与展示**：从某个数据表中提取特定条件下的数据，并以更直观的列名呈现。  \n- **报表生成**：在生成业务报表时，可能需要重命名列名以符合业务术语。  \n- **数据分析**：提取特定条件下的数据用于进一步分析，例如统计、可视化等。  \n\n### **用户描述**  \n用户可能遇到的实际问题或需求包括：  \n1. **数据查询需求**：  \n   - 用户需要查看 `table1` 表中满足 `condition = value` 的所有记录，但只关心 `column1` 和 `column2` 两列的数据。  \n   - 例如，在订单表中查询所有“已支付”订单的 `订单ID` 和 `订单金额`，并希望列名显示为 `订单编号` 和 `金额`。  \n\n2. **数据展示优化**：  \n   - 原始列名（如 `column1`）可能不够直观，用户希望在查询结果中使用更易理解的别名（如 `alias1`）。  \n   - 例如，数据库中的列名可能是 `user_id`，但业务报表中需要显示为 `用户ID`。  \n\n3. **条件过滤需求**：  \n   - 用户只需要特定条件下的数据，例如状态为“已完成”的记录、某个时间范围的数据，或者某个分类下的条目。  \n   - 例如，在员工表中查询 `部门 = \"销售部\"` 的员工姓名和工号，并分别命名为 `员工姓名` 和 `工号`。  \n\n### **总结**  \n这条 SQL 语句的核心是：  \n1. **从 `table1` 表中选择数据**。  \n2. **仅返回满足 `condition = value` 的记录**。  \n3. **提取 `column1` 和 `column2` 列，并分别命名为 `alias1` 和 `alias2`**。  \n4. **适用于数据查询、报表生成、数据分析等场景**，帮助用户更高效地获取和展示所需信息。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]