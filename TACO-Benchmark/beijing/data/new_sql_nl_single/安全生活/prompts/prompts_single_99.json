[
  {
    "idx": 99,
    "sql_query": "select t1.c1 from table1 as t1 where t1.c2 = (select t2.c3 from table2 as t2 where t2.c4 = ?)",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nselect t1.c1 from table1 as t1 where t1.c2 = (select t2.c3 from table2 as t2 where t2.c4 = ?)\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 99,
    "problem_description": "### 查询意图：\n该 SQL 语句的目的是从 `table1` 中查询满足特定条件的记录，具体是查询 `table1` 中 `c2` 列的值等于子查询结果的 `c1` 列的值。\n\n### 详细描述：\n1. **主查询部分**：\n   - 查询的表：`table1`，别名为 `t1`。\n   - 查询的列：`t1.c1`。\n   - 查询条件：`t1.c2` 的值等于子查询的结果。\n\n2. **子查询部分**：\n   - 查询的表：`table2`，别名为 `t2`。\n   - 查询的列：`t2.c3`。\n   - 查询条件：`t2.c4` 的值等于一个参数（用 `?` 表示，通常是动态传入的值）。\n\n### 业务场景：\n1. **表关系**：\n   - `table1` 和 `table2` 之间通过 `table1.c2` 和 `table2.c3` 建立了某种关联关系。\n   - 子查询从 `table2` 中根据 `c4` 的值找到对应的 `c3` 的值，然后主查询用这个值去匹配 `table1` 中的 `c2` 列。\n\n2. **可能的业务场景**：\n   - 假设 `table2` 是一个存储用户信息的表，`c4` 是用户ID，`c3` 是用户的某种属性（如部门ID）。\n   - `table1` 是一个存储部门信息的表，`c2` 是部门ID，`c1` 是部门名称。\n   - 该查询的目的是根据用户ID（`?`）找到对应的部门名称。\n\n### 用户描述：\n1. **用户需求**：\n   - 用户可能需要在系统中根据某个用户的ID查询该用户所属的部门名称。\n   - 例如，在员工管理系统中，输入员工ID，查询该员工所在的部门名称。\n\n2. **实际问题**：\n   - 用户可能只知道员工的ID或姓名（假设 `c4` 是员工ID或姓名），但需要快速获取该员工的部门信息。\n   - 这种查询可以帮助用户快速了解员工的归属部门，便于后续的管理或沟通。\n\n### 总结：\n该 SQL 语句通过子查询从 `table2` 中获取某个特定值（`c3`），然后在 `table1` 中查找与该值匹配的记录，最终返回 `table1` 中的 `c1` 列的值。这种查询常用于关联查询，特别是在需要根据一个表的条件查询另一个表的数据时。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### 查询意图：\n该 SQL 语句的目的是从 `table1` 中查询满足特定条件的记录，具体是查询 `table1` 中 `c2` 列的值等于子查询结果的 `c1` 列的值。\n\n### 详细描述：\n1. **主查询部分**：\n   - 查询的表：`table1`，别名为 `t1`。\n   - 查询的列：`t1.c1`。\n   - 查询条件：`t1.c2` 的值等于子查询的结果。\n\n2. **子查询部分**：\n   - 查询的表：`table2`，别名为 `t2`。\n   - 查询的列：`t2.c3`。\n   - 查询条件：`t2.c4` 的值等于一个参数（用 `?` 表示，通常是动态传入的值）。\n\n### 业务场景：\n1. **表关系**：\n   - `table1` 和 `table2` 之间通过 `table1.c2` 和 `table2.c3` 建立了某种关联关系。\n   - 子查询从 `table2` 中根据 `c4` 的值找到对应的 `c3` 的值，然后主查询用这个值去匹配 `table1` 中的 `c2` 列。\n\n2. **可能的业务场景**：\n   - 假设 `table2` 是一个存储用户信息的表，`c4` 是用户ID，`c3` 是用户的某种属性（如部门ID）。\n   - `table1` 是一个存储部门信息的表，`c2` 是部门ID，`c1` 是部门名称。\n   - 该查询的目的是根据用户ID（`?`）找到对应的部门名称。\n\n### 用户描述：\n1. **用户需求**：\n   - 用户可能需要在系统中根据某个用户的ID查询该用户所属的部门名称。\n   - 例如，在员工管理系统中，输入员工ID，查询该员工所在的部门名称。\n\n2. **实际问题**：\n   - 用户可能只知道员工的ID或姓名（假设 `c4` 是员工ID或姓名），但需要快速获取该员工的部门信息。\n   - 这种查询可以帮助用户快速了解员工的归属部门，便于后续的管理或沟通。\n\n### 总结：\n该 SQL 语句通过子查询从 `table2` 中获取某个特定值（`c3`），然后在 `table1` 中查找与该值匹配的记录，最终返回 `table1` 中的 `c1` 列的值。这种查询常用于关联查询，特别是在需要根据一个表的条件查询另一个表的数据时。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]