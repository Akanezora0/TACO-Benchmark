[
  {
    "idx": 147,
    "sql_query": "SELECT column1, column2 FROM table1 WHERE condition1 = value1 AND (column3 + column4 * column5) > value2",
    "stage": "problem_description",
    "prompt": "\n请阅读以下 SQL 语句，逐步分析并用详细的语言描述该 SQL 语句的查询意图，包括涉及的表、列、条件，以及可能的业务场景。\n\nSQL 语句：\nSELECT column1, column2 FROM table1 WHERE condition1 = value1 AND (column3 + column4 * column5) > value2\n\n请按照以下格式输出：\n- **查询意图**：简要说明 SQL 语句的目的。\n- **详细描述**：详细解释查询涉及的表、列、条件等信息。\n- **业务场景**：查询到的表、列、条件等可以用来解决什么业务场景。\n- **用户描述**：上面的业务场景下用户可能遇到的实际问题或需求。\n"
  },
  {
    "idx": 147,
    "problem_description": "### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出满足特定条件的记录，并返回这些记录的 `column1` 和 `column2` 列的值。筛选条件包括：  \n1. `condition1` 列的值必须等于 `value1`；  \n2. 同时，`column3`、`column4` 和 `column5` 列经过计算（`column3 + column4 * column5`）后的结果必须大于 `value2`。  \n\n### **详细描述**  \n1. **涉及的表**：`table1`  \n   - 查询仅涉及一张表 `table1`，从中提取数据。  \n\n2. **涉及的列**：  \n   - **输出列**：`column1` 和 `column2`，即查询结果会返回这两列的值。  \n   - **条件列**：  \n     - `condition1`：用于直接筛选，要求其值等于 `value1`。  \n     - `column3`、`column4`、`column5`：用于计算条件，要求 `column3 + column4 * column5` 的结果大于 `value2`。  \n\n3. **计算逻辑**：  \n   - 表达式 `column3 + column4 * column5` 是一个数学运算，先计算 `column4 * column5`，然后再加上 `column3` 的值。  \n   - 该计算结果必须大于 `value2` 才会被选中。  \n\n4. **筛选条件**：  \n   - `WHERE condition1 = value1`：确保只选择 `condition1` 列值为 `value1` 的记录。  \n   - `AND (column3 + column4 * column5) > value2`：进一步筛选计算后的值满足条件的记录。  \n\n### **业务场景**  \n该查询可能适用于以下业务场景：  \n1. **财务或成本计算**：  \n   - `column3` 可能代表固定成本，`column4` 代表单位变动成本，`column5` 代表数量，`value2` 代表某个成本阈值。  \n   - 例如，查询“总成本（固定成本 + 单位变动成本 × 数量）超过某个预算值”的记录。  \n\n2. **库存或销售分析**：  \n   - `column3` 可能是基础库存，`column4` 是每日销售率，`column5` 是预测天数，`value2` 是安全库存阈值。  \n   - 例如，查询“预测库存（基础库存 + 销售率 × 预测天数）低于安全库存”的商品。  \n\n3. **绩效或评分计算**：  \n   - `column3` 可能是基础分，`column4` 是权重系数，`column5` 是某项指标值，`value2` 是合格线。  \n   - 例如，查询“综合评分（基础分 + 权重 × 指标值）超过合格线”的员工或产品。  \n\n### **用户描述**  \n在上述业务场景中，用户可能遇到的实际问题或需求包括：  \n1. **财务控制**：  \n   - 用户需要找出哪些项目的总成本超过了预算，以便进行成本优化或调整资源分配。  \n\n2. **库存预警**：  \n   - 用户希望识别哪些商品的库存可能在未来几天低于安全水平，以便及时补货，避免缺货。  \n\n3. **绩效评估**：  \n   - 用户需要筛选出综合评分达到标准的员工或产品，用于奖励、晋升或推广决策。  \n\n总之，该 SQL 查询的核心是**基于固定条件和动态计算结果的组合筛选**，适用于需要结合直接匹配和复杂计算的业务分析场景。",
    "stage": "natural_language_query",
    "prompt": "\n根据以下问题描述，模拟真实用户的提问，生成一段自然语言查询。要求如下：\n- 语言风格要符合真实场景中的用户提问，可能包含意图不明、信息冗余等特点。\n- 用户意图可能不够明确，用户无法指定具体要查询什么表或列，只描述自己遇到的场景，包含模糊或不确定的表述。\n- 用户偏向于详细描述自己遇到的场景，可能包含自己的个人信息或者相关事件的信息。\n- 表达方式可以不够专业，可能包含模糊或不确定的表述。\n- 有可能融入情感倾向，如抱怨、不满、疑惑等。\n\n严格要求：\n- **用户自然语言中不要出现具体的表名或列名，因为用户不了解底层数据库结构。**\n\n### 示例\n- 问题描述：\n查询顺义区杨镇汉石桥事地村的隐患名称，包括可能存在的卫生、安全等问题。\n- 自然语言查询：\n市民反映，顺义区杨镇汉石桥事地村，在桥头有售卖小孩玩的烟花爆竹，存在安全隐患，希望尽快进行核实处理，来电反映违规售卖烟花爆竹问题。\n\n### 示例\n- 问题描述：\n根据父母双方的姓名，在婚姻登记信息中查找有无存在对应记录。\n- 自然语言查询：\n市民反映，新生儿办理出生一件事的时候，显示父母双方小明和小红结婚证信息不匹配，自己的结婚证是22年3月25号在海淀区民政局登记的，希望能帮助核实处理一下是什么情况，来电反映结婚证信息不匹配问题。\n\n### 示例\n- 问题描述：\n查询这家企业在纳税方面有没有问题。\n- 自然语言查询：\n市民反映，通过拼多多购买北京金汇发商贸有限公司的可乐，地址：顺义区顺鑫石门农产品批发市场，但是购买后一直不给开发票，找各种理由推拖，订单号：240123149364469331471，来电反映金汇发不给开发票问题。\n\n\n### 问题描述：\n### **查询意图**  \n该 SQL 语句的目的是从 `table1` 表中筛选出满足特定条件的记录，并返回这些记录的 `column1` 和 `column2` 列的值。筛选条件包括：  \n1. `condition1` 列的值必须等于 `value1`；  \n2. 同时，`column3`、`column4` 和 `column5` 列经过计算（`column3 + column4 * column5`）后的结果必须大于 `value2`。  \n\n### **详细描述**  \n1. **涉及的表**：`table1`  \n   - 查询仅涉及一张表 `table1`，从中提取数据。  \n\n2. **涉及的列**：  \n   - **输出列**：`column1` 和 `column2`，即查询结果会返回这两列的值。  \n   - **条件列**：  \n     - `condition1`：用于直接筛选，要求其值等于 `value1`。  \n     - `column3`、`column4`、`column5`：用于计算条件，要求 `column3 + column4 * column5` 的结果大于 `value2`。  \n\n3. **计算逻辑**：  \n   - 表达式 `column3 + column4 * column5` 是一个数学运算，先计算 `column4 * column5`，然后再加上 `column3` 的值。  \n   - 该计算结果必须大于 `value2` 才会被选中。  \n\n4. **筛选条件**：  \n   - `WHERE condition1 = value1`：确保只选择 `condition1` 列值为 `value1` 的记录。  \n   - `AND (column3 + column4 * column5) > value2`：进一步筛选计算后的值满足条件的记录。  \n\n### **业务场景**  \n该查询可能适用于以下业务场景：  \n1. **财务或成本计算**：  \n   - `column3` 可能代表固定成本，`column4` 代表单位变动成本，`column5` 代表数量，`value2` 代表某个成本阈值。  \n   - 例如，查询“总成本（固定成本 + 单位变动成本 × 数量）超过某个预算值”的记录。  \n\n2. **库存或销售分析**：  \n   - `column3` 可能是基础库存，`column4` 是每日销售率，`column5` 是预测天数，`value2` 是安全库存阈值。  \n   - 例如，查询“预测库存（基础库存 + 销售率 × 预测天数）低于安全库存”的商品。  \n\n3. **绩效或评分计算**：  \n   - `column3` 可能是基础分，`column4` 是权重系数，`column5` 是某项指标值，`value2` 是合格线。  \n   - 例如，查询“综合评分（基础分 + 权重 × 指标值）超过合格线”的员工或产品。  \n\n### **用户描述**  \n在上述业务场景中，用户可能遇到的实际问题或需求包括：  \n1. **财务控制**：  \n   - 用户需要找出哪些项目的总成本超过了预算，以便进行成本优化或调整资源分配。  \n\n2. **库存预警**：  \n   - 用户希望识别哪些商品的库存可能在未来几天低于安全水平，以便及时补货，避免缺货。  \n\n3. **绩效评估**：  \n   - 用户需要筛选出综合评分达到标准的员工或产品，用于奖励、晋升或推广决策。  \n\n总之，该 SQL 查询的核心是**基于固定条件和动态计算结果的组合筛选**，适用于需要结合直接匹配和复杂计算的业务分析场景。\n\n请根据上述问题描述，生成对应的自然语言查询。\n"
  }
]